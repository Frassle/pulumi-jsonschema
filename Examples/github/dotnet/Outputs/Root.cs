// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GithubWorkflow.Outputs
{

    [OutputType]
    public sealed class Root
    {
        /// <summary>
        /// default any for anyOf
        /// </summary>
        public readonly object? Concurrency;
        public readonly Outputs.DefinitionsDefaults? Defaults;
        /// <summary>
        /// default any for anyOf
        /// </summary>
        public readonly object? Env;
        public readonly Outputs.Jobs Jobs;
        /// <summary>
        /// The name of your workflow. GitHub displays the names of your workflows on your repository's actions page. If you omit this field, GitHub sets the name to the workflow's filename.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// default any for anyOf
        /// </summary>
        public readonly object On;
        /// <summary>
        /// default any for anyOf
        /// </summary>
        public readonly object? Permissions;
        /// <summary>
        /// The name for workflow runs generated from the workflow. GitHub displays the workflow run name in the list of workflow runs on your repository's 'Actions' tab.
        /// </summary>
        public readonly string? RunName;

        [OutputConstructor]
        private Root(
            object? concurrency,

            Outputs.DefinitionsDefaults? defaults,

            object? env,

            Outputs.Jobs jobs,

            string? name,

            object on,

            object? permissions,

            string? runName)
        {
            Concurrency = concurrency;
            Defaults = defaults;
            Env = env;
            Jobs = jobs;
            Name = name;
            On = on;
            Permissions = permissions;
            RunName = runName;
        }
    }
}
