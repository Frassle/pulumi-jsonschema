{
  "name": "pulumi",
  "description": "A pulumi package generated from a json schema",
  "keywords": [
    "pulumi",
    "jsonschema"
  ],
  "homepage": "https://github.com/Frassle/pulumi-jsonschema",
  "repository": "https://github.com/Frassle/pulumi-jsonschema",
  "license": "Apache-2.0",
  "functions": {
    "pulumi:index:read": {
      "description": "Read the given JSON into the object model",
      "inputs": {
        "required": [
          "json"
        ],
        "properties": {
          "json": {
            "type": "string"
          }
        }
      },
      "outputs": {
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "$ref": "#/types/pulumi:index:pulumiPackageMetaschema"
          }
        }
      }
    },
    "pulumi:index:write": {
      "description": "Read the given JSON into the object model",
      "inputs": {
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "$ref": "#/types/pulumi:index:pulumiPackageMetaschema"
          }
        }
      },
      "outputs": {
        "required": [
          "json"
        ],
        "properties": {
          "json": {
            "type": "string"
          }
        }
      }
    }
  },
  "types": {
    "pulumi:index:mapType": {
      "type": "object",
      "description": "A reference to a map type. The \u0022type\u0022 property must be set to \u0022object\u0022 and the \u0022additionalProperties\u0022 property may be present. No other properties may be present.",
      "properties": {
        "additionalProperties": {
          "$ref": "#/types/pulumi:index:inputPropertiesAdditionalProperties"
        },
        "type": {
          "type": "string",
          "const": "object"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:type": {
      "description": "The underlying primitive type of the union, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:propertiesType": {
      "description": "The primitive type, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:arrayType": {
      "type": "object",
      "description": "A reference to an array type. The \u0022type\u0022 property must be set to \u0022array\u0022 and the \u0022items\u0022 property must be present. No other properties may be present.",
      "properties": {
        "items": {
          "$ref": "#/types/pulumi:index:additionalPropertiesInputPropertiesAdditionalProperties"
        },
        "type": {
          "type": "string",
          "const": "array"
        }
      },
      "required": [
        "items",
        "type"
      ]
    },
    "pulumi:index:oneOf0PropertiesType": {
      "description": "The primitive type, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:unionType": {
      "type": "object",
      "description": "A reference to a union type. The \u0022oneOf\u0022 property must be present. The union may additional specify an underlying primitive type via the \u0022type\u0022 property and a discriminator via the \u0022discriminator\u0022 property. No other properties may be present.",
      "properties": {
        "discriminator": {
          "$ref": "#/types/pulumi:index:discriminator"
        },
        "oneOf": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumi:index:propertiesAdditionalProperties"
          },
          "description": "If present, indicates that values of the type may be one of any of the listed types"
        },
        "type": {
          "$ref": "#/types/pulumi:index:additionalPropertiesChoice5Of5Type"
        }
      },
      "required": [
        "oneOf"
      ]
    },
    "pulumi:index:propertyDefinition": {
      "type": "object",
      "description": "Describes an object or resource property",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "choice1Of5": {
          "$ref": "#/types/pulumi:index:additionalPropertiesChoice1Of5"
        },
        "choice2Of5": {
          "$ref": "#/types/pulumi:index:additionalPropertiesChoice2Of5"
        },
        "choice3Of5": {
          "$ref": "#/types/pulumi:index:oneOf2"
        },
        "choice4Of5": {
          "$ref": "#/types/pulumi:index:namedType"
        },
        "choice5Of5": {
          "$ref": "#/types/pulumi:index:choice5Of5"
        },
        "const": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "default": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "defaultInfo": {
          "$ref": "#/types/pulumi:index:defaultInfo"
        },
        "deprecationMessage": {
          "type": "string",
          "description": "Indicates whether the property is deprecated"
        },
        "description": {
          "type": "string",
          "description": "The description of the property, if any. Interpreted as Markdown."
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the property."
        },
        "plain": {
          "type": "boolean",
          "description": "Indicates that when used as an input, this type does not accept eventual values."
        },
        "replaceOnChanges": {
          "type": "boolean",
          "description": "Specifies whether a change to the property causes its containing resource to be replaced instead of updated (default false)."
        },
        "secret": {
          "type": "boolean",
          "description": "Specifies whether the property is secret (default false)."
        },
        "willReplaceOnChanges": {
          "type": "boolean",
          "description": "Indicates that the provider will replace the resource when this property is changed."
        }
      }
    },
    "pulumi:index:typeSpec": {
      "type": "object",
      "description": "Describes an object or resource property",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "choice1Of5": {
          "$ref": "#/types/pulumi:index:choice1Of5"
        },
        "choice2Of5": {
          "$ref": "#/types/pulumi:index:typeSpecOneOf1"
        },
        "choice3Of5": {
          "$ref": "#/types/pulumi:index:additionalPropertiesPropertiesAdditionalPropertiesChoice3Of5"
        },
        "choice4Of5": {
          "$ref": "#/types/pulumi:index:namedType"
        },
        "choice5Of5": {
          "$ref": "#/types/pulumi:index:additionalPropertiesChoice5Of5"
        },
        "const": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "default": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "defaultInfo": {
          "$ref": "#/types/pulumi:index:defaultInfo"
        },
        "deprecationMessage": {
          "type": "string",
          "description": "Indicates whether the property is deprecated"
        },
        "description": {
          "type": "string",
          "description": "The description of the property, if any. Interpreted as Markdown."
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the property."
        },
        "plain": {
          "type": "boolean",
          "description": "Indicates that when used as an input, this type does not accept eventual values."
        },
        "replaceOnChanges": {
          "type": "boolean",
          "description": "Specifies whether a change to the property causes its containing resource to be replaced instead of updated (default false)."
        },
        "secret": {
          "type": "boolean",
          "description": "Specifies whether the property is secret (default false)."
        },
        "willReplaceOnChanges": {
          "type": "boolean",
          "description": "Indicates that the provider will replace the resource when this property is changed."
        }
      }
    },
    "pulumi:index:defaultInfo": {
      "type": "object",
      "description": "Additional information about the property\u0027s default value, if any.",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "environment": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of environment variables to probe for a default value."
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the default value."
        }
      },
      "required": [
        "environment"
      ]
    },
    "pulumi:index:oneOf4": {
      "type": "object",
      "description": "A reference to a union type. The \u0022oneOf\u0022 property must be present. The union may additional specify an underlying primitive type via the \u0022type\u0022 property and a discriminator via the \u0022discriminator\u0022 property. No other properties may be present.",
      "properties": {
        "discriminator": {
          "$ref": "#/types/pulumi:index:discriminator"
        },
        "oneOf": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumi:index:additionalPropertiesInputPropertiesAdditionalProperties"
          },
          "description": "If present, indicates that values of the type may be one of any of the listed types"
        },
        "type": {
          "$ref": "#/types/pulumi:index:inputPropertiesAdditionalPropertiesChoice5Of5Type"
        }
      },
      "required": [
        "oneOf"
      ]
    },
    "pulumi:index:typeSpecOneOf4": {
      "type": "object",
      "description": "A reference to a union type. The \u0022oneOf\u0022 property must be present. The union may additional specify an underlying primitive type via the \u0022type\u0022 property and a discriminator via the \u0022discriminator\u0022 property. No other properties may be present.",
      "properties": {
        "discriminator": {
          "$ref": "#/types/pulumi:index:discriminator"
        },
        "oneOf": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumi:index:inputPropertiesAdditionalProperties"
          },
          "description": "If present, indicates that values of the type may be one of any of the listed types"
        },
        "type": {
          "$ref": "#/types/pulumi:index:type"
        }
      },
      "required": [
        "oneOf"
      ]
    },
    "pulumi:index:pulumiPackageMetaschema": {
      "type": "object",
      "description": "A description of the schema for a Pulumi Package",
      "properties": {
        "attribution": {
          "type": "string",
          "description": "Freeform text attribution of derived work, if required."
        },
        "config": {
          "$ref": "#/types/pulumi:index:config"
        },
        "description": {
          "type": "string",
          "description": "The description of the package. Descriptions are interpreted as Markdown."
        },
        "displayName": {
          "type": "string",
          "description": "The human-friendly name of the package."
        },
        "functions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/types/pulumi:index:functionDefinition"
          },
          "description": "A map from token to functionSpec that describes the set of functions defined by this package."
        },
        "homepage": {
          "type": "string",
          "description": "The package\u0027s homepage."
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of keywords that are associated with the package, if any."
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the package."
        },
        "license": {
          "type": "string",
          "description": "The name of the license used for the package\u0027s contents."
        },
        "logoUrl": {
          "type": "string",
          "description": "The URL of the package\u0027s logo, if any."
        },
        "meta": {
          "$ref": "#/types/pulumi:index:meta"
        },
        "name": {
          "type": "string",
          "description": "The unqualified name of the package (e.g. \u0022aws\u0022, \u0022azure\u0022, \u0022gcp\u0022, \u0022kubernetes\u0022, \u0022random\u0022)"
        },
        "parameterization": {
          "$ref": "#/types/pulumi:index:parameterization"
        },
        "pluginDownloadURL": {
          "type": "string",
          "description": "The URL to use when downloading the provider plugin binary."
        },
        "provider": {
          "$ref": "#/types/pulumi:index:objectTypeSpec"
        },
        "publisher": {
          "type": "string",
          "description": "The name of the person or organization that authored and published the package."
        },
        "repository": {
          "type": "string",
          "description": "The URL at which the package\u0027s sources can be found."
        },
        "resources": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/types/pulumi:index:resourceDefinition"
          },
          "description": "A map from type token to resourceSpec that describes the set of resources and components defined by this package."
        },
        "types": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/types/pulumi:index:typeDefinition"
          },
          "description": "A map from type token to complexTypeSpec that describes the set of complex types (i.e. object, enum) defined by this package."
        },
        "version": {
          "type": "string",
          "description": "The version of the package. The version must be valid semver."
        }
      },
      "required": [
        "name"
      ]
    },
    "pulumi:index:primitiveType": {
      "type": "object",
      "description": "A reference to a primitive type. A primitive type must have only the \u0022type\u0022 property set.",
      "properties": {
        "type": {
          "$ref": "#/types/pulumi:index:propertiesType"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:namedType": {
      "type": "object",
      "description": "A reference to a type in this or another document. The \u0022$ref\u0022 property must be present. The \u0022type\u0022 property is ignored if it is present. No other properties may be present.",
      "properties": {
        "$ref": {
          "type": "string",
          "description": "The URI of the referenced type. For example, the built-in Archive, Asset, and Any\ntypes are referenced as \u0022pulumi.json#/Archive\u0022, \u0022pulumi.json#/Asset\u0022, and \u0022pulumi.json#/Any\u0022, respectively.\nA type from this document is referenced as \u0022#/types/pulumi:type:token\u0022.\nA type from another document is referenced as \u0022path#/types/pulumi:type:token\u0022, where path is of the form:\n  \u0022/provider/vX.Y.Z/schema.json\u0022 or \u0022pulumi.json\u0022 or \u0022http[s]://example.com/provider/vX.Y.Z/schema.json\u0022\nA resource from this document is referenced as \u0022#/resources/pulumi:type:token\u0022.\nA resource from another document is referenced as \u0022path#/resources/pulumi:type:token\u0022, where path is of the form:\n  \u0022/provider/vX.Y.Z/schema.json\u0022 or \u0022pulumi.json\u0022 or \u0022http[s]://example.com/provider/vX.Y.Z/schema.json\u0022"
        },
        "type": {
          "type": "string",
          "description": "ignored; present for compatibility with existing schemas"
        }
      },
      "required": [
        "$ref"
      ]
    },
    "pulumi:index:oneOf1": {
      "type": "object",
      "description": "A reference to an array type. The \u0022type\u0022 property must be set to \u0022array\u0022 and the \u0022items\u0022 property must be present. No other properties may be present.",
      "properties": {
        "items": {
          "$ref": "#/types/pulumi:index:variablesAdditionalProperties"
        },
        "type": {
          "type": "string",
          "const": "array"
        }
      },
      "required": [
        "items",
        "type"
      ]
    },
    "pulumi:index:enumTypeSpecPropertiesType": {
      "description": "The underlying primitive type of the enum",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:oneOf0": {
      "type": "object",
      "description": "A reference to a primitive type. A primitive type must have only the \u0022type\u0022 property set.",
      "properties": {
        "type": {
          "$ref": "#/types/pulumi:index:additionalPropertiesChoice1Of5Type"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:oneOf4PropertiesType": {
      "description": "The underlying primitive type of the union, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:choice5Of5": {
      "type": "object",
      "description": "A reference to a union type. The \u0022oneOf\u0022 property must be present. The union may additional specify an underlying primitive type via the \u0022type\u0022 property and a discriminator via the \u0022discriminator\u0022 property. No other properties may be present.",
      "properties": {
        "discriminator": {
          "$ref": "#/types/pulumi:index:discriminator"
        },
        "oneOf": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumi:index:propertyDefinition"
          },
          "description": "If present, indicates that values of the type may be one of any of the listed types"
        },
        "type": {
          "$ref": "#/types/pulumi:index:typeSpecOneOf4PropertiesType"
        }
      },
      "required": [
        "oneOf"
      ]
    },
    "pulumi:index:additionalProperties": {
      "type": "object",
      "description": "Describes an object or resource property",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "choice1Of5": {
          "$ref": "#/types/pulumi:index:inputsPropertiesAdditionalPropertiesChoice1Of5"
        },
        "choice2Of5": {
          "$ref": "#/types/pulumi:index:choice2Of5"
        },
        "choice3Of5": {
          "$ref": "#/types/pulumi:index:propertiesAdditionalPropertiesChoice3Of5"
        },
        "choice4Of5": {
          "$ref": "#/types/pulumi:index:namedType"
        },
        "choice5Of5": {
          "$ref": "#/types/pulumi:index:propertiesAdditionalPropertiesChoice5Of5"
        },
        "const": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "default": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "defaultInfo": {
          "$ref": "#/types/pulumi:index:defaultInfo"
        },
        "deprecationMessage": {
          "type": "string",
          "description": "Indicates whether the property is deprecated"
        },
        "description": {
          "type": "string",
          "description": "The description of the property, if any. Interpreted as Markdown."
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the property."
        },
        "plain": {
          "type": "boolean",
          "description": "Indicates that when used as an input, this type does not accept eventual values."
        },
        "replaceOnChanges": {
          "type": "boolean",
          "description": "Specifies whether a change to the property causes its containing resource to be replaced instead of updated (default false)."
        },
        "secret": {
          "type": "boolean",
          "description": "Specifies whether the property is secret (default false)."
        },
        "willReplaceOnChanges": {
          "type": "boolean",
          "description": "Indicates that the provider will replace the resource when this property is changed."
        }
      }
    },
    "pulumi:index:additionalPropertiesChoice5Of5": {
      "type": "object",
      "description": "A reference to a union type. The \u0022oneOf\u0022 property must be present. The union may additional specify an underlying primitive type via the \u0022type\u0022 property and a discriminator via the \u0022discriminator\u0022 property. No other properties may be present.",
      "properties": {
        "discriminator": {
          "$ref": "#/types/pulumi:index:discriminator"
        },
        "oneOf": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumi:index:typeSpec"
          },
          "description": "If present, indicates that values of the type may be one of any of the listed types"
        },
        "type": {
          "$ref": "#/types/pulumi:index:propertiesAdditionalPropertiesChoice5Of5Type"
        }
      },
      "required": [
        "oneOf"
      ]
    },
    "pulumi:index:resourceDefinition": {
      "type": "object",
      "description": "Describes a resource or component.",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "aliases": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumi:index:aliasDefinition"
          },
          "description": "The list of aliases for the resource."
        },
        "deprecationMessage": {
          "type": "string",
          "description": "Indicates whether the resource is deprecated"
        },
        "description": {
          "type": "string",
          "description": "The description of the resource, if any. Interpreted as Markdown."
        },
        "inputProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/types/pulumi:index:additionalPropertiesInputPropertiesAdditionalProperties"
          },
          "description": "A map from property name to propertySpec that describes the resource\u0027s input properties."
        },
        "isComponent": {
          "type": "boolean",
          "description": "Indicates whether the resource is a component."
        },
        "isOverlay": {
          "type": "boolean",
          "description": "Indicates that the implementation of the resource should not be generated from the schema, and is instead provided out-of-band by the package author"
        },
        "methods": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map from method name to function token that describes the resource\u0027s method set."
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/types/pulumi:index:typeSpec"
          },
          "description": "A map from property name to propertySpec that describes the object\u0027s properties."
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the names of an object type\u0027s required properties. These properties must be set for inputs and will always be set for outputs."
        },
        "requiredInputs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the names of the resource\u0027s required input properties."
        },
        "stateInputs": {
          "$ref": "#/types/pulumi:index:resourceDefinition"
        }
      }
    },
    "pulumi:index:baseProvider": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The unqualified name of the package (e.g. \u0022aws\u0022, \u0022azure\u0022, \u0022gcp\u0022, \u0022kubernetes\u0022, \u0022random\u0022)"
        },
        "pluginDownloadURL": {
          "type": "string",
          "description": "The URL to use when downloading the provider plugin binary."
        },
        "version": {
          "type": "string",
          "description": "The version of the package. The version must be valid semver."
        }
      },
      "required": [
        "name",
        "version"
      ]
    },
    "pulumi:index:objectTypeSpec": {
      "type": "object",
      "description": "Describes a resource or component.",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "aliases": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumi:index:aliasDefinition"
          },
          "description": "The list of aliases for the resource."
        },
        "deprecationMessage": {
          "type": "string",
          "description": "Indicates whether the resource is deprecated"
        },
        "description": {
          "type": "string",
          "description": "The description of the resource, if any. Interpreted as Markdown."
        },
        "inputProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/types/pulumi:index:inputPropertiesAdditionalProperties"
          },
          "description": "A map from property name to propertySpec that describes the resource\u0027s input properties."
        },
        "isComponent": {
          "type": "boolean",
          "description": "Indicates whether the resource is a component."
        },
        "isOverlay": {
          "type": "boolean",
          "description": "Indicates that the implementation of the resource should not be generated from the schema, and is instead provided out-of-band by the package author"
        },
        "methods": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map from method name to function token that describes the resource\u0027s method set."
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/types/pulumi:index:propertiesAdditionalProperties"
          },
          "description": "A map from property name to propertySpec that describes the object\u0027s properties."
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the names of an object type\u0027s required properties. These properties must be set for inputs and will always be set for outputs."
        },
        "requiredInputs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the names of the resource\u0027s required input properties."
        },
        "stateInputs": {
          "$ref": "#/types/pulumi:index:objectTypeSpec"
        }
      }
    },
    "pulumi:index:variablesAdditionalProperties": {
      "type": "object",
      "description": "Describes an object or resource property",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "choice1Of5": {
          "$ref": "#/types/pulumi:index:typeSpecOneOf0"
        },
        "choice2Of5": {
          "$ref": "#/types/pulumi:index:oneOf1"
        },
        "choice3Of5": {
          "$ref": "#/types/pulumi:index:typeSpecOneOf2"
        },
        "choice4Of5": {
          "$ref": "#/types/pulumi:index:namedType"
        },
        "choice5Of5": {
          "$ref": "#/types/pulumi:index:variablesAdditionalPropertiesChoice5Of5"
        },
        "const": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "default": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "defaultInfo": {
          "$ref": "#/types/pulumi:index:defaultInfo"
        },
        "deprecationMessage": {
          "type": "string",
          "description": "Indicates whether the property is deprecated"
        },
        "description": {
          "type": "string",
          "description": "The description of the property, if any. Interpreted as Markdown."
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the property."
        },
        "plain": {
          "type": "boolean",
          "description": "Indicates that when used as an input, this type does not accept eventual values."
        },
        "replaceOnChanges": {
          "type": "boolean",
          "description": "Specifies whether a change to the property causes its containing resource to be replaced instead of updated (default false)."
        },
        "secret": {
          "type": "boolean",
          "description": "Specifies whether the property is secret (default false)."
        },
        "willReplaceOnChanges": {
          "type": "boolean",
          "description": "Indicates that the provider will replace the resource when this property is changed."
        }
      }
    },
    "pulumi:index:meta": {
      "type": "object",
      "description": "Format metadata about this package.",
      "properties": {
        "moduleFormat": {
          "type": "string",
          "description": "A regex that is used by the importer to extract a module name from the module portion of a type token. Packages that use the module format \u0022namespace1/namespace2/.../namespaceN\u0022 do not need to specify a format. The regex must define one capturing group that contains the module name, which must be formatted as \u0022namespace1/namespace2/...namespaceN\u0022."
        },
        "supportPack": {
          "type": "boolean",
          "description": "Write the package to support the pack command."
        }
      }
    },
    "pulumi:index:inputPropertiesAdditionalProperties": {
      "type": "object",
      "description": "Describes an object or resource property",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "choice1Of5": {
          "$ref": "#/types/pulumi:index:primitiveType"
        },
        "choice2Of5": {
          "$ref": "#/types/pulumi:index:inputPropertiesAdditionalPropertiesChoice2Of5"
        },
        "choice3Of5": {
          "$ref": "#/types/pulumi:index:mapType"
        },
        "choice4Of5": {
          "$ref": "#/types/pulumi:index:namedType"
        },
        "choice5Of5": {
          "$ref": "#/types/pulumi:index:typeSpecOneOf4"
        },
        "const": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "default": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "defaultInfo": {
          "$ref": "#/types/pulumi:index:defaultInfo"
        },
        "deprecationMessage": {
          "type": "string",
          "description": "Indicates whether the property is deprecated"
        },
        "description": {
          "type": "string",
          "description": "The description of the property, if any. Interpreted as Markdown."
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the property."
        },
        "plain": {
          "type": "boolean",
          "description": "Indicates that when used as an input, this type does not accept eventual values."
        },
        "replaceOnChanges": {
          "type": "boolean",
          "description": "Specifies whether a change to the property causes its containing resource to be replaced instead of updated (default false)."
        },
        "secret": {
          "type": "boolean",
          "description": "Specifies whether the property is secret (default false)."
        },
        "willReplaceOnChanges": {
          "type": "boolean",
          "description": "Indicates that the provider will replace the resource when this property is changed."
        }
      }
    },
    "pulumi:index:additionalPropertiesInputPropertiesAdditionalProperties": {
      "type": "object",
      "description": "Describes an object or resource property",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "choice1Of5": {
          "$ref": "#/types/pulumi:index:oneOf0"
        },
        "choice2Of5": {
          "$ref": "#/types/pulumi:index:arrayType"
        },
        "choice3Of5": {
          "$ref": "#/types/pulumi:index:choice3Of5"
        },
        "choice4Of5": {
          "$ref": "#/types/pulumi:index:namedType"
        },
        "choice5Of5": {
          "$ref": "#/types/pulumi:index:oneOf4"
        },
        "const": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "default": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "defaultInfo": {
          "$ref": "#/types/pulumi:index:defaultInfo"
        },
        "deprecationMessage": {
          "type": "string",
          "description": "Indicates whether the property is deprecated"
        },
        "description": {
          "type": "string",
          "description": "The description of the property, if any. Interpreted as Markdown."
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the property."
        },
        "plain": {
          "type": "boolean",
          "description": "Indicates that when used as an input, this type does not accept eventual values."
        },
        "replaceOnChanges": {
          "type": "boolean",
          "description": "Specifies whether a change to the property causes its containing resource to be replaced instead of updated (default false)."
        },
        "secret": {
          "type": "boolean",
          "description": "Specifies whether the property is secret (default false)."
        },
        "willReplaceOnChanges": {
          "type": "boolean",
          "description": "Indicates that the provider will replace the resource when this property is changed."
        }
      }
    },
    "pulumi:index:objectTypeDefinition": {
      "type": "object",
      "description": "Describes an object type",
      "properties": {
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/types/pulumi:index:propertyDefinition"
          },
          "description": "A map from property name to propertySpec that describes the object\u0027s properties."
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the names of an object type\u0027s required properties. These properties must be set for inputs and will always be set for outputs."
        },
        "type": {
          "type": "string",
          "const": "object"
        }
      }
    },
    "pulumi:index:oneOf2": {
      "type": "object",
      "description": "A reference to a map type. The \u0022type\u0022 property must be set to \u0022object\u0022 and the \u0022additionalProperties\u0022 property may be present. No other properties may be present.",
      "properties": {
        "additionalProperties": {
          "$ref": "#/types/pulumi:index:propertyDefinition"
        },
        "type": {
          "type": "string",
          "const": "object"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:typeSpecOneOf0": {
      "type": "object",
      "description": "A reference to a primitive type. A primitive type must have only the \u0022type\u0022 property set.",
      "properties": {
        "type": {
          "$ref": "#/types/pulumi:index:variablesAdditionalPropertiesChoice1Of5Type"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:typeSpecOneOf1": {
      "type": "object",
      "description": "A reference to an array type. The \u0022type\u0022 property must be set to \u0022array\u0022 and the \u0022items\u0022 property must be present. No other properties may be present.",
      "properties": {
        "items": {
          "$ref": "#/types/pulumi:index:typeSpec"
        },
        "type": {
          "type": "string",
          "const": "array"
        }
      },
      "required": [
        "items",
        "type"
      ]
    },
    "pulumi:index:discriminator": {
      "type": "object",
      "description": "Informs the consumer of an alternative schema based on the value associated with it",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "mapping": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "an optional object to hold mappings between payload values and schema names or references"
        },
        "propertyName": {
          "type": "string",
          "description": "PropertyName is the name of the property in the payload that will hold the discriminator value"
        }
      },
      "required": [
        "propertyName"
      ]
    },
    "pulumi:index:typeSpecOneOf0PropertiesType": {
      "description": "The primitive type, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:choice1Of5Type": {
      "description": "The primitive type, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:typeSpecOneOf4PropertiesType": {
      "description": "The underlying primitive type of the union, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:choice5Of5Type": {
      "description": "The underlying primitive type of the union, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:enumValueDefinition": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "deprecationMessage": {
          "type": "string",
          "description": "Indicates whether the value is deprecated."
        },
        "description": {
          "type": "string",
          "description": "The description of the enum value, if any. Interpreted as Markdown."
        },
        "name": {
          "type": "string",
          "description": "If present, overrides the name of the enum value that would usually be derived from the value."
        },
        "value": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "integer"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "required": [
        "value"
      ]
    },
    "pulumi:index:additionalPropertiesChoice5Of5Type": {
      "description": "The underlying primitive type of the union, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:typeSpecOneOf2": {
      "type": "object",
      "description": "A reference to a map type. The \u0022type\u0022 property must be set to \u0022object\u0022 and the \u0022additionalProperties\u0022 property may be present. No other properties may be present.",
      "properties": {
        "additionalProperties": {
          "$ref": "#/types/pulumi:index:variablesAdditionalProperties"
        },
        "type": {
          "type": "string",
          "const": "object"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:propertiesAdditionalPropertiesChoice5Of5Type": {
      "description": "The underlying primitive type of the union, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:additionalPropertiesChoice1Of5Type": {
      "description": "The primitive type, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:choice1Of5": {
      "type": "object",
      "description": "A reference to a primitive type. A primitive type must have only the \u0022type\u0022 property set.",
      "properties": {
        "type": {
          "$ref": "#/types/pulumi:index:propertiesAdditionalPropertiesChoice1Of5Type"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:choice3Of5": {
      "type": "object",
      "description": "A reference to a map type. The \u0022type\u0022 property must be set to \u0022object\u0022 and the \u0022additionalProperties\u0022 property may be present. No other properties may be present.",
      "properties": {
        "additionalProperties": {
          "$ref": "#/types/pulumi:index:additionalPropertiesInputPropertiesAdditionalProperties"
        },
        "type": {
          "type": "string",
          "const": "object"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:choice2Of5": {
      "type": "object",
      "description": "A reference to an array type. The \u0022type\u0022 property must be set to \u0022array\u0022 and the \u0022items\u0022 property must be present. No other properties may be present.",
      "properties": {
        "items": {
          "$ref": "#/types/pulumi:index:additionalProperties"
        },
        "type": {
          "type": "string",
          "const": "array"
        }
      },
      "required": [
        "items",
        "type"
      ]
    },
    "pulumi:index:variablesAdditionalPropertiesChoice5Of5": {
      "type": "object",
      "description": "A reference to a union type. The \u0022oneOf\u0022 property must be present. The union may additional specify an underlying primitive type via the \u0022type\u0022 property and a discriminator via the \u0022discriminator\u0022 property. No other properties may be present.",
      "properties": {
        "discriminator": {
          "$ref": "#/types/pulumi:index:discriminator"
        },
        "oneOf": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumi:index:variablesAdditionalProperties"
          },
          "description": "If present, indicates that values of the type may be one of any of the listed types"
        },
        "type": {
          "$ref": "#/types/pulumi:index:oneOf4PropertiesType"
        }
      },
      "required": [
        "oneOf"
      ]
    },
    "pulumi:index:additionalPropertiesChoice2Of5": {
      "type": "object",
      "description": "A reference to an array type. The \u0022type\u0022 property must be set to \u0022array\u0022 and the \u0022items\u0022 property must be present. No other properties may be present.",
      "properties": {
        "items": {
          "$ref": "#/types/pulumi:index:propertyDefinition"
        },
        "type": {
          "type": "string",
          "const": "array"
        }
      },
      "required": [
        "items",
        "type"
      ]
    },
    "pulumi:index:propertiesAdditionalPropertiesChoice1Of5Type": {
      "description": "The primitive type, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:inputPropertiesAdditionalPropertiesChoice2Of5": {
      "type": "object",
      "description": "A reference to an array type. The \u0022type\u0022 property must be set to \u0022array\u0022 and the \u0022items\u0022 property must be present. No other properties may be present.",
      "properties": {
        "items": {
          "$ref": "#/types/pulumi:index:inputPropertiesAdditionalProperties"
        },
        "type": {
          "type": "string",
          "const": "array"
        }
      },
      "required": [
        "items",
        "type"
      ]
    },
    "pulumi:index:inputPropertiesAdditionalPropertiesChoice5Of5Type": {
      "description": "The underlying primitive type of the union, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:additionalPropertiesChoice1Of5": {
      "type": "object",
      "description": "A reference to a primitive type. A primitive type must have only the \u0022type\u0022 property set.",
      "properties": {
        "type": {
          "$ref": "#/types/pulumi:index:typeSpecOneOf0PropertiesType"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:propertiesAdditionalPropertiesChoice1Of5": {
      "type": "object",
      "description": "A reference to a primitive type. A primitive type must have only the \u0022type\u0022 property set.",
      "properties": {
        "type": {
          "$ref": "#/types/pulumi:index:choice1Of5Type"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:objectTypeDetails": {
      "type": "object",
      "description": "Describes an object type",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/types/pulumi:index:additionalProperties"
          },
          "description": "A map from property name to propertySpec that describes the object\u0027s properties."
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the names of an object type\u0027s required properties. These properties must be set for inputs and will always be set for outputs."
        }
      }
    },
    "pulumi:index:additionalPropertiesChoice3Of5": {
      "type": "object",
      "description": "A reference to a map type. The \u0022type\u0022 property must be set to \u0022object\u0022 and the \u0022additionalProperties\u0022 property may be present. No other properties may be present.",
      "properties": {
        "additionalProperties": {
          "$ref": "#/types/pulumi:index:propertiesAdditionalProperties"
        },
        "type": {
          "type": "string",
          "const": "object"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:functionDefinition": {
      "type": "object",
      "description": "Describes a function.",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "deprecationMessage": {
          "type": "string",
          "description": "Indicates whether the function is deprecated"
        },
        "description": {
          "type": "string",
          "description": "The description of the function, if any. Interpreted as Markdown."
        },
        "inputs": {
          "$ref": "#/types/pulumi:index:objectTypeDetails"
        },
        "isOverlay": {
          "type": "boolean",
          "description": "Indicates that the implementation of the function should not be generated from the schema, and is instead provided out-of-band by the package author"
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the function."
        },
        "multiArgumentInputs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of parameter names that determines whether the input bag should be treated as a single argument or as multiple arguments. The list corresponds to the order in which the parameters should be passed to the function."
        },
        "outputs": {
          "$ref": "pulumi.json#/Any",
          "description": "unhandled schema: Json.Schema.DescriptionKeyword, Json.Schema.AnyOfKeyword"
        }
      }
    },
    "pulumi:index:propertiesAdditionalProperties": {
      "type": "object",
      "description": "Describes an object or resource property",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "choice1Of5": {
          "$ref": "#/types/pulumi:index:propertiesAdditionalPropertiesChoice1Of5"
        },
        "choice2Of5": {
          "$ref": "#/types/pulumi:index:propertiesAdditionalPropertiesChoice2Of5"
        },
        "choice3Of5": {
          "$ref": "#/types/pulumi:index:additionalPropertiesChoice3Of5"
        },
        "choice4Of5": {
          "$ref": "#/types/pulumi:index:namedType"
        },
        "choice5Of5": {
          "$ref": "#/types/pulumi:index:unionType"
        },
        "const": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "default": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "defaultInfo": {
          "$ref": "#/types/pulumi:index:defaultInfo"
        },
        "deprecationMessage": {
          "type": "string",
          "description": "Indicates whether the property is deprecated"
        },
        "description": {
          "type": "string",
          "description": "The description of the property, if any. Interpreted as Markdown."
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the property."
        },
        "plain": {
          "type": "boolean",
          "description": "Indicates that when used as an input, this type does not accept eventual values."
        },
        "replaceOnChanges": {
          "type": "boolean",
          "description": "Specifies whether a change to the property causes its containing resource to be replaced instead of updated (default false)."
        },
        "secret": {
          "type": "boolean",
          "description": "Specifies whether the property is secret (default false)."
        },
        "willReplaceOnChanges": {
          "type": "boolean",
          "description": "Indicates that the provider will replace the resource when this property is changed."
        }
      }
    },
    "pulumi:index:inputsPropertiesAdditionalPropertiesChoice1Of5": {
      "type": "object",
      "description": "A reference to a primitive type. A primitive type must have only the \u0022type\u0022 property set.",
      "properties": {
        "type": {
          "$ref": "#/types/pulumi:index:oneOf0PropertiesType"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:config": {
      "type": "object",
      "description": "The package\u0027s configuration variables.",
      "properties": {
        "defaults": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the names of the package\u0027s non-required configuration variables."
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/types/pulumi:index:variablesAdditionalProperties"
          },
          "description": "A map from variable name to propertySpec that describes a package\u0027s configuration variables."
        }
      }
    },
    "pulumi:index:propertiesAdditionalPropertiesChoice5Of5": {
      "type": "object",
      "description": "A reference to a union type. The \u0022oneOf\u0022 property must be present. The union may additional specify an underlying primitive type via the \u0022type\u0022 property and a discriminator via the \u0022discriminator\u0022 property. No other properties may be present.",
      "properties": {
        "discriminator": {
          "$ref": "#/types/pulumi:index:discriminator"
        },
        "oneOf": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumi:index:additionalProperties"
          },
          "description": "If present, indicates that values of the type may be one of any of the listed types"
        },
        "type": {
          "$ref": "#/types/pulumi:index:choice5Of5Type"
        }
      },
      "required": [
        "oneOf"
      ]
    },
    "pulumi:index:aliasDefinition": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "name": {
          "type": "string",
          "description": "The name portion of the alias, if any"
        },
        "project": {
          "type": "string",
          "description": "The project portion of the alias, if any"
        },
        "type": {
          "type": "string",
          "description": "The type portion of the alias, if any"
        }
      }
    },
    "pulumi:index:propertiesAdditionalPropertiesChoice3Of5": {
      "type": "object",
      "description": "A reference to a map type. The \u0022type\u0022 property must be set to \u0022object\u0022 and the \u0022additionalProperties\u0022 property may be present. No other properties may be present.",
      "properties": {
        "additionalProperties": {
          "$ref": "#/types/pulumi:index:additionalProperties"
        },
        "type": {
          "type": "string",
          "const": "object"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:propertiesAdditionalPropertiesChoice2Of5": {
      "type": "object",
      "description": "A reference to an array type. The \u0022type\u0022 property must be set to \u0022array\u0022 and the \u0022items\u0022 property must be present. No other properties may be present.",
      "properties": {
        "items": {
          "$ref": "#/types/pulumi:index:propertiesAdditionalProperties"
        },
        "type": {
          "type": "string",
          "const": "array"
        }
      },
      "required": [
        "items",
        "type"
      ]
    },
    "pulumi:index:typeDefinition": {
      "type": "object",
      "description": "Describes an object or enum type.",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "choice1Of2": {
          "$ref": "#/types/pulumi:index:objectTypeDefinition"
        },
        "choice2Of2": {
          "$ref": "#/types/pulumi:index:enumTypeDefinition"
        },
        "description": {
          "type": "string",
          "description": "The description of the type, if any. Interpreted as Markdown."
        },
        "isOverlay": {
          "type": "boolean",
          "description": "Indicates that the implementation of the type should not be generated from the schema, and is instead provided out-of-band by the package author"
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the type."
        }
      }
    },
    "pulumi:index:parameterization": {
      "type": "object",
      "description": "An optional object to define parameterization for the package.",
      "properties": {
        "baseProvider": {
          "$ref": "#/types/pulumi:index:baseProvider"
        },
        "parameter": {
          "type": "string"
        }
      }
    },
    "pulumi:index:enumTypeDefinition": {
      "type": "object",
      "description": "Describes an enum type",
      "properties": {
        "enum": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumi:index:enumValueDefinition"
          },
          "description": "The list of possible values for the enum"
        },
        "type": {
          "$ref": "#/types/pulumi:index:enumTypeSpecPropertiesType"
        }
      },
      "required": [
        "enum",
        "type"
      ]
    },
    "pulumi:index:variablesAdditionalPropertiesChoice1Of5Type": {
      "description": "The primitive type, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:additionalPropertiesPropertiesAdditionalPropertiesChoice3Of5": {
      "type": "object",
      "description": "A reference to a map type. The \u0022type\u0022 property must be set to \u0022object\u0022 and the \u0022additionalProperties\u0022 property may be present. No other properties may be present.",
      "properties": {
        "additionalProperties": {
          "$ref": "#/types/pulumi:index:typeSpec"
        },
        "type": {
          "type": "string",
          "const": "object"
        }
      },
      "required": [
        "type"
      ]
    }
  }
}