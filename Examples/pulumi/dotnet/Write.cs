// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Jsonschema
{
    public static class Write
    {
        /// <summary>
        /// Read the given JSON into the object model
        /// </summary>
        public static Task<WriteResult> InvokeAsync(WriteArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<WriteResult>("jsonschema:index:write", args ?? new WriteArgs(), options.WithDefaults());

        /// <summary>
        /// Read the given JSON into the object model
        /// </summary>
        public static Output<WriteResult> Invoke(WriteInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<WriteResult>("jsonschema:index:write", args ?? new WriteInvokeArgs(), options.WithDefaults());
    }


    public sealed class WriteArgs : global::Pulumi.InvokeArgs
    {
        [Input("value", required: true)]
        public Inputs.Root Value { get; set; } = null!;

        public WriteArgs()
        {
        }
        public static new WriteArgs Empty => new WriteArgs();
    }

    public sealed class WriteInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("value", required: true)]
        public Input<Inputs.RootArgs> Value { get; set; } = null!;

        public WriteInvokeArgs()
        {
        }
        public static new WriteInvokeArgs Empty => new WriteInvokeArgs();
    }


    [OutputType]
    public sealed class WriteResult
    {
        public readonly string Json;

        [OutputConstructor]
        private WriteResult(string json)
        {
            Json = json;
        }
    }
}
