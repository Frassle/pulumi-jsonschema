{
  "name": "pulumi",
  "description": "A pulumi package generated from a json schema",
  "keywords": [
    "pulumi",
    "jsonschema"
  ],
  "homepage": "https://github.com/Frassle/pulumi-jsonschema",
  "repository": "https://github.com/Frassle/pulumi-jsonschema",
  "license": "Apache-2.0",
  "functions": {
    "pulumi:index:read": {
      "description": "Read the given JSON into the object model",
      "inputs": {
        "required": [
          "json"
        ],
        "properties": {
          "json": {
            "type": "string"
          }
        }
      },
      "outputs": {
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "$ref": "#/types/pulumi:index:PulumiPackageMetaschema"
          }
        }
      }
    },
    "pulumi:index:write": {
      "description": "Read the given JSON into the object model",
      "inputs": {
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "$ref": "#/types/pulumi:index:PulumiPackageMetaschema"
          }
        }
      },
      "outputs": {
        "required": [
          "json"
        ],
        "properties": {
          "json": {
            "type": "string"
          }
        }
      }
    }
  },
  "types": {
    "pulumi:index:FunctionDefinition": {
      "type": "object",
      "description": "Describes a function.",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "deprecationMessage": {
          "type": "string",
          "description": "Indicates whether the function is deprecated"
        },
        "description": {
          "type": "string",
          "description": "The description of the function, if any. Interpreted as Markdown."
        },
        "inputs": {
          "$ref": "#/types/pulumi:index:ObjectTypeDetails"
        },
        "isOverlay": {
          "type": "boolean",
          "description": "Indicates that the implementation of the function should not be generated from the schema, and is instead provided out-of-band by the package author"
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the function."
        },
        "multiArgumentInputs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of parameter names that determines whether the input bag should be treated as a single argument or as multiple arguments. The list corresponds to the order in which the parameters should be passed to the function."
        },
        "outputs": {
          "$ref": "#/types/pulumi:index:ObjectTypeDetails"
        }
      }
    },
    "pulumi:index:ObjectTypeDetails": {
      "type": "object",
      "description": "Describes an object type",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "A map from property name to propertySpec that describes the object\u0027s properties."
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the names of an object type\u0027s required properties. These properties must be set for inputs and will always be set for outputs."
        }
      }
    },
    "pulumi:index:config": {
      "type": "object",
      "description": "The package\u0027s configuration variables.",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the names of the package\u0027s required configuration variables."
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "A map from variable name to propertySpec that describes a package\u0027s configuration variables."
        }
      }
    },
    "pulumi:index:meta": {
      "type": "object",
      "description": "Format metadata about this package.",
      "required": [
        "moduleFormat"
      ],
      "properties": {
        "moduleFormat": {
          "type": "string",
          "description": "A regex that is used by the importer to extract a module name from the module portion of a type token. Packages that use the module format \u0022namespace1/namespace2/.../namespaceN\u0022 do not need to specify a format. The regex must define one capturing group that contains the module name, which must be formatted as \u0022namespace1/namespace2/...namespaceN\u0022."
        }
      }
    },
    "pulumi:index:PulumiPackageMetaschema": {
      "type": "object",
      "description": "A description of the schema for a Pulumi Package",
      "required": [
        "name"
      ],
      "properties": {
        "attribution": {
          "type": "string",
          "description": "Freeform text attribution of derived work, if required."
        },
        "config": {
          "$ref": "#/types/pulumi:index:config"
        },
        "description": {
          "type": "string",
          "description": "The description of the package. Descriptions are interpreted as Markdown."
        },
        "displayName": {
          "type": "string",
          "description": "The human-friendly name of the package."
        },
        "functions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/types/pulumi:index:FunctionDefinition"
          },
          "description": "A map from token to functionSpec that describes the set of functions defined by this package."
        },
        "homepage": {
          "type": "string",
          "description": "The package\u0027s homepage."
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of keywords that are associated with the package, if any."
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the package."
        },
        "license": {
          "type": "string",
          "description": "The name of the license used for the package\u0027s contents."
        },
        "logoUrl": {
          "type": "string",
          "description": "The URL of the package\u0027s logo, if any."
        },
        "meta": {
          "$ref": "#/types/pulumi:index:meta"
        },
        "name": {
          "type": "string",
          "description": "The unqualified name of the package (e.g. \u0022aws\u0022, \u0022azure\u0022, \u0022gcp\u0022, \u0022kubernetes\u0022, \u0022random\u0022)"
        },
        "pluginDownloadURL": {
          "type": "string",
          "description": "The URL to use when downloading the provider plugin binary."
        },
        "provider": {
          "$ref": "pulumi.json#/Any",
          "description": "default any for allOf"
        },
        "publisher": {
          "type": "string",
          "description": "The name of the person or organization that authored and published the package."
        },
        "repository": {
          "type": "string",
          "description": "The URL at which the package\u0027s sources can be found."
        },
        "resources": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "A map from type token to resourceSpec that describes the set of resources and components defined by this package."
        },
        "types": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "A map from type token to complexTypeSpec that describes the set of complex types (i.e. object, enum) defined by this package."
        },
        "version": {
          "type": "string",
          "description": "The version of the package. The version must be valid semver."
        }
      }
    }
  }
}