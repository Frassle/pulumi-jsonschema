// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Bootstraprc.Inputs
{

    public sealed class CorePropertiesArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalProperties")]
        private Dictionary<string, object>? _additionalProperties;
        public Dictionary<string, object> AdditionalProperties
        {
            get => _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>());
            set => _additionalProperties = value;
        }

        /// <summary>
        /// Import your custom styles here. Usually this endpoint file contains a list of @imports of your application styles.
        /// </summary>
        [Input("appStyles")]
        public string? AppStyles { get; set; }

        /// <summary>
        /// The .scss file path to be loaded after Bootstrap's _variables.scss file
        /// </summary>
        [Input("bootstrapCustomizations")]
        public string? BootstrapCustomizations { get; set; }

        [Input("bootstrapVersion", required: true)]
        public Pulumi.Bootstraprc.BootstrapVersion BootstrapVersion { get; set; }

        [Input("loglevel")]
        public Pulumi.Bootstraprc.Loglevel? Loglevel { get; set; }

        /// <summary>
        /// The .scss file path to be loaded before Bootstrap's _variables.scss file
        /// </summary>
        [Input("preBootstrapCustomizations")]
        public string? PreBootstrapCustomizations { get; set; }

        /// <summary>
        /// unhandled schema: Json.Schema.DescriptionKeyword, Json.Schema.TypeKeyword
        /// </summary>
        [Input("scripts")]
        public object? Scripts { get; set; }

        [Input("styleLoaders", required: true)]
        private List<string>? _styleLoaders;

        /// <summary>
        /// An array of Webpack loader names. Order matters, and sass-loader is required.
        /// </summary>
        public List<string> StyleLoaders
        {
            get => _styleLoaders ?? (_styleLoaders = new List<string>());
            set => _styleLoaders = value;
        }

        /// <summary>
        /// unhandled schema: Json.Schema.DescriptionKeyword, Json.Schema.TypeKeyword
        /// </summary>
        [Input("styles")]
        public object? Styles { get; set; }

        /// <summary>
        /// Set to true if using a custom icon font and you need to specify its path in your Sass files
        /// </summary>
        [Input("useCustomIconFontPath")]
        public bool? UseCustomIconFontPath { get; set; }

        /// <summary>
        /// Enables/disables the flexbox model available in Bootstrap 4
        /// </summary>
        [Input("useFlexbox")]
        public bool? UseFlexbox { get; set; }

        public CorePropertiesArgs()
        {
        }
        public static new CorePropertiesArgs Empty => new CorePropertiesArgs();
    }
}
