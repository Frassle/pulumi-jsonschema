// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

namespace Pulumi.Bootstraprc
{
    static class Utilities
    {
        public static string? GetEnv(params string[] names)
        {
            foreach (var n in names)
            {
                var value = global::System.Environment.GetEnvironmentVariable(n);
                if (value != null)
                {
                    return value;
                }
            }
            return null;
        }

        static string[] trueValues = { "1", "t", "T", "true", "TRUE", "True" };
        static string[] falseValues = { "0", "f", "F", "false", "FALSE", "False" };
        public static bool? GetEnvBoolean(params string[] names)
        {
            var s = GetEnv(names);
            if (s != null)
            {
                if (global::System.Array.IndexOf(trueValues, s) != -1)
                {
                    return true;
                }
                if (global::System.Array.IndexOf(falseValues, s) != -1)
                {
                    return false;
                }
            }
            return null;
        }

        public static int? GetEnvInt32(params string[] names) => int.TryParse(GetEnv(names), out int v) ? (int?)v : null;

        public static double? GetEnvDouble(params string[] names) => double.TryParse(GetEnv(names), out double v) ? (double?)v : null;

        [global::System.Obsolete("Please use WithDefaults instead")]
        public static global::Pulumi.InvokeOptions WithVersion(this global::Pulumi.InvokeOptions? options)
        {
            var dst = options ?? new global::Pulumi.InvokeOptions{};
            dst.Version = options?.Version ?? Version;
            return dst;
        }

        public static global::Pulumi.InvokeOptions WithDefaults(this global::Pulumi.InvokeOptions? src)
        {
            var dst = src ?? new global::Pulumi.InvokeOptions{};
            dst.Version = src?.Version ?? Version;
            dst.PluginDownloadURL = src?.PluginDownloadURL ?? "github://api.github.com/Frassle";
            return dst;
        }
		public static global::Pulumi.RegisterPackageRequest PackageParameterization()
		{
			return new global::Pulumi.RegisterPackageRequest(
				name: "jsonschema",
				version: "0.1.1",
				downloadUrl: "",
				parameterization: new global::Pulumi.RegisterPackageRequest.PackageParameterization(
					name: "bootstraprc",
					version: "1.0.0",
					value: global::System.Convert.FromBase64String("Ymh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9TY2hlbWFTdG9yZS9zY2hlbWFzdG9yZS9tYXN0ZXIvc3JjL3NjaGVtYXMvanNvbi9ib290c3RyYXByYy5qc29u8Rx7CiAgIiRzY2hlbWEiOiAiaHR0cDovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC0wNC9zY2hlbWEjIiwKICAiYWxsT2YiOiBbCiAgICB7CiAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvY29yZVByb3BlcnRpZXMiCiAgICB9LAogICAgewogICAgICAiYW55T2YiOiBbCiAgICAgICAgewogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJlbnYiOiB7CiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlNldHMgdGhlIGV4dHJhY3RTdHlsZXMgcHJvcGVydHkgYmFzZWQgb24gdGhlIHZhbHVlIG9mIE5PREVfRU5WIiwKICAgICAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAgICAgImRldmVsb3BtZW50IjogewogICAgICAgICAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL2V4dHJhY3RTdHlsaW5nIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJwcm9kdWN0aW9uIjogewogICAgICAgICAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL2V4dHJhY3RTdHlsaW5nIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgICJub3QiOiB7CiAgICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAgICJleHRyYWN0U3R5bGVzIjoge30KICAgICAgICAgICAgfSwKICAgICAgICAgICAgInJlcXVpcmVkIjogWyJleHRyYWN0U3R5bGVzIl0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAiZXh0cmFjdFN0eWxlcyI6IHsKICAgICAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL2V4dHJhY3RTdHlsaW5nL3Byb3BlcnRpZXMvZXh0cmFjdFN0eWxlcyIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgICJub3QiOiB7CiAgICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAgICJlbnYiOiB7fQogICAgICAgICAgICB9LAogICAgICAgICAgICAicmVxdWlyZWQiOiBbImVudiJdCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgewogICAgICAicmVxdWlyZWQiOiBbImJvb3RzdHJhcFZlcnNpb24iLCAic3R5bGVMb2FkZXJzIl0KICAgIH0KICBdLAogICJkZWZpbml0aW9ucyI6IHsKICAgICJleHRyYWN0U3R5bGluZyI6IHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImV4dHJhY3RTdHlsZXMiOiB7CiAgICAgICAgICAiZGVmYXVsdCI6IGZhbHNlLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkVuYWJsZXMvZGlzYWJsZXMgZXh0cmFjdGlvbiBvZiBzdHlsZXMgdG8gYSBzdGFuZGFsb25lIENTUyBmaWxlIHVzaW5nIGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpbiIsCiAgICAgICAgICAidHlwZSI6ICJib29sZWFuIgogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICJjb3JlUHJvcGVydGllcyI6IHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImFwcFN0eWxlcyI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJJbXBvcnQgeW91ciBjdXN0b20gc3R5bGVzIGhlcmUuIFVzdWFsbHkgdGhpcyBlbmRwb2ludCBmaWxlIGNvbnRhaW5zIGEgbGlzdCBvZiBAaW1wb3J0cyBvZiB5b3VyIGFwcGxpY2F0aW9uIHN0eWxlcy4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImJvb3RzdHJhcEN1c3RvbWl6YXRpb25zIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSAuc2NzcyBmaWxlIHBhdGggdG8gYmUgbG9hZGVkIGFmdGVyIEJvb3RzdHJhcCdzIF92YXJpYWJsZXMuc2NzcyBmaWxlIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJib290c3RyYXBWZXJzaW9uIjogewogICAgICAgICAgImRlZmF1bHQiOiAzLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBtYWpvciB2ZXJzaW9uIG9mIEJvb3RzdHJhcCBiZWluZyB1c2VkIiwKICAgICAgICAgICJlbnVtIjogWzMsIDRdLAogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIKICAgICAgICB9LAogICAgICAgICJsb2dsZXZlbCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdmVyYm9zaXR5IG9mIGxvZ2dpbmcuIEV4Y2x1ZGUgdGhpcyBwcm9wZXJ0eSB0byBkaXNhYmxlLiIsCiAgICAgICAgICAiZW51bSI6IFsiZGVidWciXSwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJwcmVCb290c3RyYXBDdXN0b21pemF0aW9ucyI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgLnNjc3MgZmlsZSBwYXRoIHRvIGJlIGxvYWRlZCBiZWZvcmUgQm9vdHN0cmFwJ3MgX3ZhcmlhYmxlcy5zY3NzIGZpbGUiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgInNjcmlwdHMiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRXhjbHVkZXMvaW5jbHVkZXMgQm9vdHN0cmFwJ3MgSmF2YVNjcmlwdCBtb2R1bGVzIiwKICAgICAgICAgICJ0eXBlIjogWyJib29sZWFuIiwgIm9iamVjdCJdCiAgICAgICAgfSwKICAgICAgICAic3R5bGVMb2FkZXJzIjogewogICAgICAgICAgImRlZmF1bHQiOiBbInN0eWxlIiwgImNzcyIsICJzYXNzIl0sCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQW4gYXJyYXkgb2YgV2VicGFjayBsb2FkZXIgbmFtZXMuIE9yZGVyIG1hdHRlcnMsIGFuZCBzYXNzLWxvYWRlciBpcyByZXF1aXJlZC4iLAogICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgICB9LAogICAgICAgICAgIm1pbkl0ZW1zIjogMSwKICAgICAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgICAgICJ1bmlxdWVJdGVtcyI6IHRydWUKICAgICAgICB9LAogICAgICAgICJzdHlsZXMiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRXhjbHVkZXMvaW5jbHVkZXMgQm9vdHN0cmFwJ3MgQ1NTIG1vZHVsZXMiLAogICAgICAgICAgInR5cGUiOiBbImJvb2xlYW4iLCAib2JqZWN0Il0KICAgICAgICB9LAogICAgICAgICJ1c2VDdXN0b21JY29uRm9udFBhdGgiOiB7CiAgICAgICAgICAiZGVmYXVsdCI6IGZhbHNlLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlNldCB0byB0cnVlIGlmIHVzaW5nIGEgY3VzdG9tIGljb24gZm9udCBhbmQgeW91IG5lZWQgdG8gc3BlY2lmeSBpdHMgcGF0aCBpbiB5b3VyIFNhc3MgZmlsZXMiLAogICAgICAgICAgInR5cGUiOiAiYm9vbGVhbiIKICAgICAgICB9LAogICAgICAgICJ1c2VGbGV4Ym94IjogewogICAgICAgICAgImRlZmF1bHQiOiB0cnVlLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkVuYWJsZXMvZGlzYWJsZXMgdGhlIGZsZXhib3ggbW9kZWwgYXZhaWxhYmxlIGluIEJvb3RzdHJhcCA0IiwKICAgICAgICAgICJ0eXBlIjogImJvb2xlYW4iCiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfSwKICAiaWQiOiAiaHR0cHM6Ly9qc29uLnNjaGVtYXN0b3JlLm9yZy9ib290c3RyYXByYy5qc29uIiwKICAidGl0bGUiOiAiSlNPTiBzY2hlbWEgZm9yIFdlYnBhY2sncyBib290c3RyYXAtbG9hZGVyIGNvbmZpZ3VyYXRpb24gZmlsZSIsCiAgInR5cGUiOiAib2JqZWN0Igp9")));
        }
        private readonly static string version;
        public static string Version => version;

        static Utilities()
        {
            var assembly = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(Utilities)).Assembly;
            using var stream = assembly.GetManifestResourceStream("Pulumi.Bootstraprc.version.txt");
            using var reader = new global::System.IO.StreamReader(stream ?? throw new global::System.NotSupportedException("Missing embedded version.txt file"));
            version = reader.ReadToEnd().Trim();
            var parts = version.Split("\n");
            if (parts.Length == 2)
            {
                // The first part is the provider name.
                version = parts[1].Trim();
            }
        }
    }

    internal sealed class BootstraprcResourceTypeAttribute : global::Pulumi.ResourceTypeAttribute
    {
        public BootstraprcResourceTypeAttribute(string type) : base(type, Utilities.Version)
        {
        }
    }
}
