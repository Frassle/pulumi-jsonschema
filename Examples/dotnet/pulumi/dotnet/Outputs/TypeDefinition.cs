// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pulumi.Outputs
{

    /// <summary>
    /// Describes an object or enum type.
    /// </summary>
    [OutputType]
    public sealed class TypeDefinition
    {
        public readonly ImmutableDictionary<string, object>? AdditionalProperties;
        public readonly Outputs.ObjectTypeDefinition? Choice1Of2;
        public readonly Outputs.EnumTypeDefinition? Choice2Of2;
        /// <summary>
        /// The description of the type, if any. Interpreted as Markdown.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Indicates that the implementation of the type should not be generated from the schema, and is instead provided out-of-band by the package author
        /// </summary>
        public readonly bool? IsOverlay;
        /// <summary>
        /// Additional language-specific data about the type.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Language;

        [OutputConstructor]
        private TypeDefinition(
            ImmutableDictionary<string, object>? additionalProperties,

            Outputs.ObjectTypeDefinition? choice1Of2,

            Outputs.EnumTypeDefinition? choice2Of2,

            string? description,

            bool? isOverlay,

            ImmutableDictionary<string, object>? language)
        {
            AdditionalProperties = additionalProperties;
            Choice1Of2 = choice1Of2;
            Choice2Of2 = choice2Of2;
            Description = description;
            IsOverlay = isOverlay;
            Language = language;
        }
    }
}
