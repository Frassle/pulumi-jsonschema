{
  "name": "pulumi",
  "version": "1.0.0",
  "description": "A pulumi package generated from a json schema",
  "keywords": [
    "pulumi",
    "jsonschema"
  ],
  "homepage": "https://github.com/Frassle/pulumi-jsonschema",
  "repository": "https://github.com/Frassle/pulumi-jsonschema",
  "license": "Apache-2.0",
  "pluginDownloadURL": "github://api.github.com/Frassle",
  "parameterization": {
    "baseProvider": {
      "version": "0.1.1",
      "name": "jsonschema"
    },
    "parameter": "VWh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9wdWx1bWkvcHVsdW1pL21hc3Rlci9wa2cvY29kZWdlbi9zY2hlbWEvcHVsdW1pLmpzb279kwJ7CiAgICAiJHNjaGVtYSI6ICJodHRwczovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC8yMDIwLTEyL3NjaGVtYSIsCiAgICAiJGlkIjogImh0dHBzOi8vZ2l0aHViLmNvbS9wdWx1bWkvcHVsdW1pL2Jsb2IvbWFzdGVyL3BrZy9jb2RlZ2VuL3NjaGVtYS5qc29uIiwKICAgICJ0aXRsZSI6ICJQdWx1bWkgUGFja2FnZSBNZXRhc2NoZW1hIiwKICAgICJkZXNjcmlwdGlvbiI6ICJBIGRlc2NyaXB0aW9uIG9mIHRoZSBzY2hlbWEgZm9yIGEgUHVsdW1pIFBhY2thZ2UiLAogICAgInR5cGUiOiAib2JqZWN0IiwKICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJuYW1lIjogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHVucXVhbGlmaWVkIG5hbWUgb2YgdGhlIHBhY2thZ2UgKGUuZy4gXCJhd3NcIiwgXCJhenVyZVwiLCBcImdjcFwiLCBcImt1YmVybmV0ZXNcIiwgXCJyYW5kb21cIikiLAogICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAicGF0dGVybiI6ICJeW2EtekEtWl1bLWEtekEtWjAtOV9dKiQiCiAgICAgICAgfSwKICAgICAgICAiZGlzcGxheU5hbWUiOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgaHVtYW4tZnJpZW5kbHkgbmFtZSBvZiB0aGUgcGFja2FnZS4iLAogICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAidmVyc2lvbiI6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB2ZXJzaW9uIG9mIHRoZSBwYWNrYWdlLiBUaGUgdmVyc2lvbiBtdXN0IGJlIHZhbGlkIHNlbXZlci4iLAogICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAicGF0dGVybiI6ICJedj8oP1A8bWFqb3I\u002BMHxbMS05XVxcZCopXFwuKD9QPG1pbm9yPjB8WzEtOV1cXGQqKVxcLig/UDxwYXRjaD4wfFsxLTldXFxkKikoPzotKD9QPHByZXJlbGVhc2U\u002BKD86MHxbMS05XVxcZCp8XFxkKlthLXpBLVotXVswLTlhLXpBLVotXSopKD86XFwuKD86MHxbMS05XVxcZCp8XFxkKlthLXpBLVotXVswLTlhLXpBLVotXSopKSopKT8oPzpcXCsoP1A8YnVpbGRtZXRhZGF0YT5bMC05YS16QS1aLV0rKD86XFwuWzAtOWEtekEtWi1dKykqKSk/JCIKICAgICAgICB9LAogICAgICAgICJkZXNjcmlwdGlvbiI6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgcGFja2FnZS4gRGVzY3JpcHRpb25zIGFyZSBpbnRlcnByZXRlZCBhcyBNYXJrZG93bi4iLAogICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAia2V5d29yZHMiOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbGlzdCBvZiBrZXl3b3JkcyB0aGF0IGFyZSBhc3NvY2lhdGVkIHdpdGggdGhlIHBhY2thZ2UsIGlmIGFueS4iLAogICAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAgICJpdGVtcyI6IHsKICAgICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgImhvbWVwYWdlIjogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHBhY2thZ2UncyBob21lcGFnZS4iLAogICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAibGljZW5zZSI6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBsaWNlbnNlIHVzZWQgZm9yIHRoZSBwYWNrYWdlJ3MgY29udGVudHMuIiwKICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImF0dHJpYnV0aW9uIjogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnJlZWZvcm0gdGV4dCBhdHRyaWJ1dGlvbiBvZiBkZXJpdmVkIHdvcmssIGlmIHJlcXVpcmVkLiIsCiAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJyZXBvc2l0b3J5IjogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIFVSTCBhdCB3aGljaCB0aGUgcGFja2FnZSdzIHNvdXJjZXMgY2FuIGJlIGZvdW5kLiIsCiAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJsb2dvVXJsIjogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIFVSTCBvZiB0aGUgcGFja2FnZSdzIGxvZ28sIGlmIGFueS4iLAogICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAicGx1Z2luRG93bmxvYWRVUkwiOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgVVJMIHRvIHVzZSB3aGVuIGRvd25sb2FkaW5nIHRoZSBwcm92aWRlciBwbHVnaW4gYmluYXJ5LiIsCiAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJwdWJsaXNoZXIiOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgcGVyc29uIG9yIG9yZ2FuaXphdGlvbiB0aGF0IGF1dGhvcmVkIGFuZCBwdWJsaXNoZWQgdGhlIHBhY2thZ2UuIiwKICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgIm1ldGEiOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGb3JtYXQgbWV0YWRhdGEgYWJvdXQgdGhpcyBwYWNrYWdlLiIsCiAgICAgICAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAgICAgIm1vZHVsZUZvcm1hdCI6IHsKICAgICAgICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQSByZWdleCB0aGF0IGlzIHVzZWQgYnkgdGhlIGltcG9ydGVyIHRvIGV4dHJhY3QgYSBtb2R1bGUgbmFtZSBmcm9tIHRoZSBtb2R1bGUgcG9ydGlvbiBvZiBhIHR5cGUgdG9rZW4uIFBhY2thZ2VzIHRoYXQgdXNlIHRoZSBtb2R1bGUgZm9ybWF0IFwibmFtZXNwYWNlMS9uYW1lc3BhY2UyLy4uLi9uYW1lc3BhY2VOXCIgZG8gbm90IG5lZWQgdG8gc3BlY2lmeSBhIGZvcm1hdC4gVGhlIHJlZ2V4IG11c3QgZGVmaW5lIG9uZSBjYXB0dXJpbmcgZ3JvdXAgdGhhdCBjb250YWlucyB0aGUgbW9kdWxlIG5hbWUsIHdoaWNoIG11c3QgYmUgZm9ybWF0dGVkIGFzIFwibmFtZXNwYWNlMS9uYW1lc3BhY2UyLy4uLm5hbWVzcGFjZU5cIi4iLAogICAgICAgICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgICAgICAgImZvcm1hdCI6ICJyZWdleCIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAic3VwcG9ydFBhY2siOiB7CiAgICAgICAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIldyaXRlIHRoZSBwYWNrYWdlIHRvIHN1cHBvcnQgdGhlIHBhY2sgY29tbWFuZC4iLAogICAgICAgICAgICAgICAgICAgICJ0eXBlIjogImJvb2xlYW4iCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiY29uZmlnIjogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHBhY2thZ2UncyBjb25maWd1cmF0aW9uIHZhcmlhYmxlcy4iLAogICAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgICAgICJ2YXJpYWJsZXMiOiB7CiAgICAgICAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkEgbWFwIGZyb20gdmFyaWFibGUgbmFtZSB0byBwcm9wZXJ0eVNwZWMgdGhhdCBkZXNjcmliZXMgYSBwYWNrYWdlJ3MgY29uZmlndXJhdGlvbiB2YXJpYWJsZXMuIiwKICAgICAgICAgICAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgICAgICAgICAgICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgIiRyZWYiOiAiIy8kZGVmcy9wcm9wZXJ0eVNwZWMiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJkZWZhdWx0cyI6IHsKICAgICAgICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQSBsaXN0IG9mIHRoZSBuYW1lcyBvZiB0aGUgcGFja2FnZSdzIG5vbi1yZXF1aXJlZCBjb25maWd1cmF0aW9uIHZhcmlhYmxlcy4iLAogICAgICAgICAgICAgICAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgICAgICAgICAgICAgICAiaXRlbXMiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAidHlwZXMiOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJBIG1hcCBmcm9tIHR5cGUgdG9rZW4gdG8gY29tcGxleFR5cGVTcGVjIHRoYXQgZGVzY3JpYmVzIHRoZSBzZXQgb2YgY29tcGxleCB0eXBlcyAoaS5lLiBvYmplY3QsIGVudW0pIGRlZmluZWQgYnkgdGhpcyBwYWNrYWdlLiIsCiAgICAgICAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICAgICAgICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IHsKICAgICAgICAgICAgICAgICIkcmVmIjogIiMvJGRlZnMvY29tcGxleFR5cGVTcGVjIgogICAgICAgICAgICB9LAogICAgICAgICAgICAicHJvcGVydHlOYW1lcyI6IHsKICAgICAgICAgICAgICAgICIkcmVmIjogIiMvJGRlZnMvdG9rZW4iCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgICJwcm92aWRlciI6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBwcm92aWRlciB0eXBlIGZvciB0aGlzIHBhY2thZ2UuIiwKICAgICAgICAgICAgIiRyZWYiOiAiIy8kZGVmcy9yZXNvdXJjZVNwZWMiCiAgICAgICAgfSwKICAgICAgICAicmVzb3VyY2VzIjogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQSBtYXAgZnJvbSB0eXBlIHRva2VuIHRvIHJlc291cmNlU3BlYyB0aGF0IGRlc2NyaWJlcyB0aGUgc2V0IG9mIHJlc291cmNlcyBhbmQgY29tcG9uZW50cyBkZWZpbmVkIGJ5IHRoaXMgcGFja2FnZS4iLAogICAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICAgICAiJHJlZiI6ICIjLyRkZWZzL3Jlc291cmNlU3BlYyIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInByb3BlcnR5TmFtZXMiOiB7CiAgICAgICAgICAgICAgICAiJHJlZiI6ICIjLyRkZWZzL3Rva2VuIgogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAiZnVuY3Rpb25zIjogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQSBtYXAgZnJvbSB0b2tlbiB0byBmdW5jdGlvblNwZWMgdGhhdCBkZXNjcmliZXMgdGhlIHNldCBvZiBmdW5jdGlvbnMgZGVmaW5lZCBieSB0aGlzIHBhY2thZ2UuIiwKICAgICAgICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgICAgICAgImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjogewogICAgICAgICAgICAgICAgIiRyZWYiOiAiIy8kZGVmcy9mdW5jdGlvblNwZWMiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJwcm9wZXJ0eU5hbWVzIjogewogICAgICAgICAgICAgICAgIiRyZWYiOiAiIy8kZGVmcy90b2tlbiIKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQWRkaXRpb25hbCBsYW5ndWFnZS1zcGVjaWZpYyBkYXRhIGFib3V0IHRoZSBwYWNrYWdlLiIsCiAgICAgICAgICAgICJ0eXBlIjogIm9iamVjdCIKICAgICAgICB9LAogICAgICAgICJwYXJhbWV0ZXJpemF0aW9uIjogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQW4gb3B0aW9uYWwgb2JqZWN0IHRvIGRlZmluZSBwYXJhbWV0ZXJpemF0aW9uIGZvciB0aGUgcGFja2FnZS4iLAogICAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgICAgICJiYXNlUHJvdmlkZXIiOiB7CiAgICAgICAgICAgICAgICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgICAgICAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHVucXVhbGlmaWVkIG5hbWUgb2YgdGhlIHBhY2thZ2UgKGUuZy4gXCJhd3NcIiwgXCJhenVyZVwiLCBcImdjcFwiLCBcImt1YmVybmV0ZXNcIiwgXCJyYW5kb21cIikiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJwYXR0ZXJuIjogIl5bYS16QS1aXVstYS16QS1aMC05X10qJCIKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgInZlcnNpb24iOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHZlcnNpb24gb2YgdGhlIHBhY2thZ2UuIFRoZSB2ZXJzaW9uIG11c3QgYmUgdmFsaWQgc2VtdmVyLiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInBhdHRlcm4iOiAiXnY/KD9QPG1ham9yPjB8WzEtOV1cXGQqKVxcLig/UDxtaW5vcj4wfFsxLTldXFxkKilcXC4oP1A8cGF0Y2g\u002BMHxbMS05XVxcZCopKD86LSg/UDxwcmVyZWxlYXNlPig/OjB8WzEtOV1cXGQqfFxcZCpbYS16QS1aLV1bMC05YS16QS1aLV0qKSg/OlxcLig/OjB8WzEtOV1cXGQqfFxcZCpbYS16QS1aLV1bMC05YS16QS1aLV0qKSkqKSk/KD86XFwrKD9QPGJ1aWxkbWV0YWRhdGE\"
  },
  "functions": {
    "pulumi:index:read": {
      "description": "Read the given JSON into the object model",
      "inputs": {
        "required": [
          "json"
        ],
        "properties": {
          "json": {
            "type": "string"
          }
        }
      },
      "outputs": {
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "$ref": "#/types/pulumi:index:pulumiPackageMetaschema"
          }
        }
      }
    },
    "pulumi:index:write": {
      "description": "Read the given JSON into the object model",
      "inputs": {
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "$ref": "#/types/pulumi:index:pulumiPackageMetaschema"
          }
        }
      },
      "outputs": {
        "required": [
          "json"
        ],
        "properties": {
          "json": {
            "type": "string"
          }
        }
      }
    }
  },
  "types": {
    "pulumi:index:type": {
      "description": "The underlying primitive type of the union, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:primitiveType": {
      "type": "object",
      "description": "A reference to a primitive type. A primitive type must have only the \u0022type\u0022 property set.",
      "properties": {
        "type": {
          "$ref": "#/types/pulumi:index:additionalPropertiesChoice1Of5Type"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:resourceDefinition": {
      "type": "object",
      "description": "Describes a resource or component.",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "aliases": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumi:index:aliasDefinition"
          },
          "description": "The list of aliases for the resource."
        },
        "deprecationMessage": {
          "type": "string",
          "description": "Indicates whether the resource is deprecated"
        },
        "description": {
          "type": "string",
          "description": "The description of the resource, if any. Interpreted as Markdown."
        },
        "inputProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/types/pulumi:index:inputPropertiesAdditionalProperties"
          },
          "description": "A map from property name to propertySpec that describes the resource\u0027s input properties."
        },
        "isComponent": {
          "type": "boolean",
          "description": "Indicates whether the resource is a component."
        },
        "isOverlay": {
          "type": "boolean",
          "description": "Indicates that the implementation of the resource should not be generated from the schema, and is instead provided out-of-band by the package author"
        },
        "methods": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map from method name to function token that describes the resource\u0027s method set."
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/types/pulumi:index:typeSpec"
          },
          "description": "A map from property name to propertySpec that describes the object\u0027s properties."
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the names of an object type\u0027s required properties. These properties must be set for inputs and will always be set for outputs."
        },
        "requiredInputs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the names of the resource\u0027s required input properties."
        },
        "stateInputs": {
          "$ref": "#/types/pulumi:index:resourceDefinition"
        }
      }
    },
    "pulumi:index:propertyDefinition": {
      "type": "object",
      "description": "Describes an object or resource property",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "choice1Of5": {
          "$ref": "#/types/pulumi:index:additionalPropertiesChoice1Of5"
        },
        "choice2Of5": {
          "$ref": "#/types/pulumi:index:arrayType"
        },
        "choice3Of5": {
          "$ref": "#/types/pulumi:index:oneOf2"
        },
        "choice4Of5": {
          "$ref": "#/types/pulumi:index:namedType"
        },
        "choice5Of5": {
          "$ref": "#/types/pulumi:index:oneOf4"
        },
        "const": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "default": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "defaultInfo": {
          "$ref": "#/types/pulumi:index:defaultInfo"
        },
        "deprecationMessage": {
          "type": "string",
          "description": "Indicates whether the property is deprecated"
        },
        "description": {
          "type": "string",
          "description": "The description of the property, if any. Interpreted as Markdown."
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the property."
        },
        "plain": {
          "type": "boolean",
          "description": "Indicates that when used as an input, this type does not accept eventual values."
        },
        "replaceOnChanges": {
          "type": "boolean",
          "description": "Specifies whether a change to the property causes its containing resource to be replaced instead of updated (default false)."
        },
        "secret": {
          "type": "boolean",
          "description": "Specifies whether the property is secret (default false)."
        },
        "willReplaceOnChanges": {
          "type": "boolean",
          "description": "Indicates that the provider will replace the resource when this property is changed."
        }
      }
    },
    "pulumi:index:meta": {
      "type": "object",
      "description": "Format metadata about this package.",
      "properties": {
        "moduleFormat": {
          "type": "string",
          "description": "A regex that is used by the importer to extract a module name from the module portion of a type token. Packages that use the module format \u0022namespace1/namespace2/.../namespaceN\u0022 do not need to specify a format. The regex must define one capturing group that contains the module name, which must be formatted as \u0022namespace1/namespace2/...namespaceN\u0022."
        },
        "supportPack": {
          "type": "boolean",
          "description": "Write the package to support the pack command."
        }
      }
    },
    "pulumi:index:arrayType": {
      "type": "object",
      "description": "A reference to an array type. The \u0022type\u0022 property must be set to \u0022array\u0022 and the \u0022items\u0022 property must be present. No other properties may be present.",
      "properties": {
        "items": {
          "$ref": "#/types/pulumi:index:propertyDefinition"
        },
        "type": {
          "type": "string",
          "const": "array"
        }
      },
      "required": [
        "items",
        "type"
      ]
    },
    "pulumi:index:oneOf1": {
      "type": "object",
      "description": "A reference to an array type. The \u0022type\u0022 property must be set to \u0022array\u0022 and the \u0022items\u0022 property must be present. No other properties may be present.",
      "properties": {
        "items": {
          "$ref": "#/types/pulumi:index:typeSpec"
        },
        "type": {
          "type": "string",
          "const": "array"
        }
      },
      "required": [
        "items",
        "type"
      ]
    },
    "pulumi:index:propertiesType": {
      "description": "The underlying primitive type of the union, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:oneOf4PropertiesType": {
      "description": "The underlying primitive type of the union, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:enumTypeDefinition": {
      "type": "object",
      "description": "Describes an enum type",
      "properties": {
        "enum": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumi:index:enumValueDefinition"
          },
          "description": "The list of possible values for the enum"
        },
        "type": {
          "$ref": "#/types/pulumi:index:enumTypeSpecPropertiesType"
        }
      },
      "required": [
        "enum",
        "type"
      ]
    },
    "pulumi:index:unionType": {
      "type": "object",
      "description": "A reference to a union type. The \u0022oneOf\u0022 property must be present. The union may additional specify an underlying primitive type via the \u0022type\u0022 property and a discriminator via the \u0022discriminator\u0022 property. No other properties may be present.",
      "properties": {
        "discriminator": {
          "$ref": "#/types/pulumi:index:discriminator"
        },
        "oneOf": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumi:index:inputsPropertiesAdditionalProperties"
          },
          "description": "If present, indicates that values of the type may be one of any of the listed types"
        },
        "type": {
          "$ref": "#/types/pulumi:index:oneOf4PropertiesType"
        }
      },
      "required": [
        "oneOf"
      ]
    },
    "pulumi:index:typeSpecOneOf4PropertiesType": {
      "description": "The underlying primitive type of the union, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:typeSpecOneOf1": {
      "type": "object",
      "description": "A reference to an array type. The \u0022type\u0022 property must be set to \u0022array\u0022 and the \u0022items\u0022 property must be present. No other properties may be present.",
      "properties": {
        "items": {
          "$ref": "#/types/pulumi:index:propertiesAdditionalProperties"
        },
        "type": {
          "type": "string",
          "const": "array"
        }
      },
      "required": [
        "items",
        "type"
      ]
    },
    "pulumi:index:namedType": {
      "type": "object",
      "description": "A reference to a type in this or another document. The \u0022$ref\u0022 property must be present. The \u0022type\u0022 property is ignored if it is present. No other properties may be present.",
      "properties": {
        "$ref": {
          "type": "string",
          "description": "The URI of the referenced type. For example, the built-in Archive, Asset, and Any\ntypes are referenced as \u0022pulumi.json#/Archive\u0022, \u0022pulumi.json#/Asset\u0022, and \u0022pulumi.json#/Any\u0022, respectively.\nA type from this document is referenced as \u0022#/types/pulumi:type:token\u0022.\nA type from another document is referenced as \u0022path#/types/pulumi:type:token\u0022, where path is of the form:\n  \u0022/provider/vX.Y.Z/schema.json\u0022 or \u0022pulumi.json\u0022 or \u0022http[s]://example.com/provider/vX.Y.Z/schema.json\u0022\nA resource from this document is referenced as \u0022#/resources/pulumi:type:token\u0022.\nA resource from another document is referenced as \u0022path#/resources/pulumi:type:token\u0022, where path is of the form:\n  \u0022/provider/vX.Y.Z/schema.json\u0022 or \u0022pulumi.json\u0022 or \u0022http[s]://example.com/provider/vX.Y.Z/schema.json\u0022"
        },
        "type": {
          "type": "string",
          "description": "ignored; present for compatibility with existing schemas"
        }
      },
      "required": [
        "$ref"
      ]
    },
    "pulumi:index:mapType": {
      "type": "object",
      "description": "A reference to a map type. The \u0022type\u0022 property must be set to \u0022object\u0022 and the \u0022additionalProperties\u0022 property may be present. No other properties may be present.",
      "properties": {
        "additionalProperties": {
          "$ref": "#/types/pulumi:index:inputsPropertiesAdditionalProperties"
        },
        "type": {
          "type": "string",
          "const": "object"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:oneOf0PropertiesType": {
      "description": "The primitive type, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:oneOf2": {
      "type": "object",
      "description": "A reference to a map type. The \u0022type\u0022 property must be set to \u0022object\u0022 and the \u0022additionalProperties\u0022 property may be present. No other properties may be present.",
      "properties": {
        "additionalProperties": {
          "$ref": "#/types/pulumi:index:propertyDefinition"
        },
        "type": {
          "type": "string",
          "const": "object"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:typeSpecOneOf0PropertiesType": {
      "description": "The primitive type, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:baseProvider": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The unqualified name of the package (e.g. \u0022aws\u0022, \u0022azure\u0022, \u0022gcp\u0022, \u0022kubernetes\u0022, \u0022random\u0022)"
        },
        "pluginDownloadURL": {
          "type": "string",
          "description": "The URL to use when downloading the provider plugin binary."
        },
        "version": {
          "type": "string",
          "description": "The version of the package. The version must be valid semver."
        }
      },
      "required": [
        "name",
        "version"
      ]
    },
    "pulumi:index:typeSpec": {
      "type": "object",
      "description": "Describes an object or resource property",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "choice1Of5": {
          "$ref": "#/types/pulumi:index:choice1Of5"
        },
        "choice2Of5": {
          "$ref": "#/types/pulumi:index:oneOf1"
        },
        "choice3Of5": {
          "$ref": "#/types/pulumi:index:additionalPropertiesChoice3Of5"
        },
        "choice4Of5": {
          "$ref": "#/types/pulumi:index:namedType"
        },
        "choice5Of5": {
          "$ref": "#/types/pulumi:index:additionalPropertiesChoice5Of5"
        },
        "const": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "default": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "defaultInfo": {
          "$ref": "#/types/pulumi:index:defaultInfo"
        },
        "deprecationMessage": {
          "type": "string",
          "description": "Indicates whether the property is deprecated"
        },
        "description": {
          "type": "string",
          "description": "The description of the property, if any. Interpreted as Markdown."
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the property."
        },
        "plain": {
          "type": "boolean",
          "description": "Indicates that when used as an input, this type does not accept eventual values."
        },
        "replaceOnChanges": {
          "type": "boolean",
          "description": "Specifies whether a change to the property causes its containing resource to be replaced instead of updated (default false)."
        },
        "secret": {
          "type": "boolean",
          "description": "Specifies whether the property is secret (default false)."
        },
        "willReplaceOnChanges": {
          "type": "boolean",
          "description": "Indicates that the provider will replace the resource when this property is changed."
        }
      }
    },
    "pulumi:index:oneOf4": {
      "type": "object",
      "description": "A reference to a union type. The \u0022oneOf\u0022 property must be present. The union may additional specify an underlying primitive type via the \u0022type\u0022 property and a discriminator via the \u0022discriminator\u0022 property. No other properties may be present.",
      "properties": {
        "discriminator": {
          "$ref": "#/types/pulumi:index:discriminator"
        },
        "oneOf": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumi:index:propertyDefinition"
          },
          "description": "If present, indicates that values of the type may be one of any of the listed types"
        },
        "type": {
          "$ref": "#/types/pulumi:index:propertiesType"
        }
      },
      "required": [
        "oneOf"
      ]
    },
    "pulumi:index:pulumiPackageMetaschema": {
      "type": "object",
      "description": "A description of the schema for a Pulumi Package",
      "properties": {
        "attribution": {
          "type": "string",
          "description": "Freeform text attribution of derived work, if required."
        },
        "config": {
          "$ref": "#/types/pulumi:index:config"
        },
        "description": {
          "type": "string",
          "description": "The description of the package. Descriptions are interpreted as Markdown."
        },
        "displayName": {
          "type": "string",
          "description": "The human-friendly name of the package."
        },
        "functions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/types/pulumi:index:functionDefinition"
          },
          "description": "A map from token to functionSpec that describes the set of functions defined by this package."
        },
        "homepage": {
          "type": "string",
          "description": "The package\u0027s homepage."
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of keywords that are associated with the package, if any."
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the package."
        },
        "license": {
          "type": "string",
          "description": "The name of the license used for the package\u0027s contents."
        },
        "logoUrl": {
          "type": "string",
          "description": "The URL of the package\u0027s logo, if any."
        },
        "meta": {
          "$ref": "#/types/pulumi:index:meta"
        },
        "name": {
          "type": "string",
          "description": "The unqualified name of the package (e.g. \u0022aws\u0022, \u0022azure\u0022, \u0022gcp\u0022, \u0022kubernetes\u0022, \u0022random\u0022)"
        },
        "parameterization": {
          "$ref": "#/types/pulumi:index:parameterization"
        },
        "pluginDownloadURL": {
          "type": "string",
          "description": "The URL to use when downloading the provider plugin binary."
        },
        "provider": {
          "$ref": "#/types/pulumi:index:objectTypeSpec"
        },
        "publisher": {
          "type": "string",
          "description": "The name of the person or organization that authored and published the package."
        },
        "repository": {
          "type": "string",
          "description": "The URL at which the package\u0027s sources can be found."
        },
        "resources": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/types/pulumi:index:resourceDefinition"
          },
          "description": "A map from type token to resourceSpec that describes the set of resources and components defined by this package."
        },
        "types": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/types/pulumi:index:typeDefinition"
          },
          "description": "A map from type token to complexTypeSpec that describes the set of complex types (i.e. object, enum) defined by this package."
        },
        "version": {
          "type": "string",
          "description": "The version of the package. The version must be valid semver."
        }
      },
      "required": [
        "name"
      ]
    },
    "pulumi:index:choice5Of5Type": {
      "description": "The underlying primitive type of the union, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:oneOf0": {
      "type": "object",
      "description": "A reference to a primitive type. A primitive type must have only the \u0022type\u0022 property set.",
      "properties": {
        "type": {
          "$ref": "#/types/pulumi:index:inputsPropertiesAdditionalPropertiesChoice1Of5Type"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:typeSpecOneOf4": {
      "type": "object",
      "description": "A reference to a union type. The \u0022oneOf\u0022 property must be present. The union may additional specify an underlying primitive type via the \u0022type\u0022 property and a discriminator via the \u0022discriminator\u0022 property. No other properties may be present.",
      "properties": {
        "discriminator": {
          "$ref": "#/types/pulumi:index:discriminator"
        },
        "oneOf": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumi:index:providerInputPropertiesAdditionalProperties"
          },
          "description": "If present, indicates that values of the type may be one of any of the listed types"
        },
        "type": {
          "$ref": "#/types/pulumi:index:additionalPropertiesChoice5Of5Type"
        }
      },
      "required": [
        "oneOf"
      ]
    },
    "pulumi:index:config": {
      "type": "object",
      "description": "The package\u0027s configuration variables.",
      "properties": {
        "defaults": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the names of the package\u0027s non-required configuration variables."
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/types/pulumi:index:additionalProperties"
          },
          "description": "A map from variable name to propertySpec that describes a package\u0027s configuration variables."
        }
      }
    },
    "pulumi:index:typeSpecOneOf0": {
      "type": "object",
      "description": "A reference to a primitive type. A primitive type must have only the \u0022type\u0022 property set.",
      "properties": {
        "type": {
          "$ref": "#/types/pulumi:index:choice1Of5Type"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:choice1Of5": {
      "type": "object",
      "description": "A reference to a primitive type. A primitive type must have only the \u0022type\u0022 property set.",
      "properties": {
        "type": {
          "$ref": "#/types/pulumi:index:additionalPropertiesPropertiesAdditionalPropertiesChoice1Of5Type"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:typeSpecOneOf2": {
      "type": "object",
      "description": "A reference to a map type. The \u0022type\u0022 property must be set to \u0022object\u0022 and the \u0022additionalProperties\u0022 property may be present. No other properties may be present.",
      "properties": {
        "additionalProperties": {
          "$ref": "#/types/pulumi:index:inputPropertiesAdditionalProperties"
        },
        "type": {
          "type": "string",
          "const": "object"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:additionalProperties": {
      "type": "object",
      "description": "Describes an object or resource property",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "choice1Of5": {
          "$ref": "#/types/pulumi:index:typeSpecOneOf0"
        },
        "choice2Of5": {
          "$ref": "#/types/pulumi:index:variablesAdditionalPropertiesChoice2Of5"
        },
        "choice3Of5": {
          "$ref": "#/types/pulumi:index:choice3Of5"
        },
        "choice4Of5": {
          "$ref": "#/types/pulumi:index:namedType"
        },
        "choice5Of5": {
          "$ref": "#/types/pulumi:index:choice5Of5"
        },
        "const": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "default": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "defaultInfo": {
          "$ref": "#/types/pulumi:index:defaultInfo"
        },
        "deprecationMessage": {
          "type": "string",
          "description": "Indicates whether the property is deprecated"
        },
        "description": {
          "type": "string",
          "description": "The description of the property, if any. Interpreted as Markdown."
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the property."
        },
        "plain": {
          "type": "boolean",
          "description": "Indicates that when used as an input, this type does not accept eventual values."
        },
        "replaceOnChanges": {
          "type": "boolean",
          "description": "Specifies whether a change to the property causes its containing resource to be replaced instead of updated (default false)."
        },
        "secret": {
          "type": "boolean",
          "description": "Specifies whether the property is secret (default false)."
        },
        "willReplaceOnChanges": {
          "type": "boolean",
          "description": "Indicates that the provider will replace the resource when this property is changed."
        }
      }
    },
    "pulumi:index:additionalPropertiesChoice1Of5": {
      "type": "object",
      "description": "A reference to a primitive type. A primitive type must have only the \u0022type\u0022 property set.",
      "properties": {
        "type": {
          "$ref": "#/types/pulumi:index:typeSpecOneOf0PropertiesType"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:choice3Of5": {
      "type": "object",
      "description": "A reference to a map type. The \u0022type\u0022 property must be set to \u0022object\u0022 and the \u0022additionalProperties\u0022 property may be present. No other properties may be present.",
      "properties": {
        "additionalProperties": {
          "$ref": "#/types/pulumi:index:additionalProperties"
        },
        "type": {
          "type": "string",
          "const": "object"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:choice2Of5": {
      "type": "object",
      "description": "A reference to an array type. The \u0022type\u0022 property must be set to \u0022array\u0022 and the \u0022items\u0022 property must be present. No other properties may be present.",
      "properties": {
        "items": {
          "$ref": "#/types/pulumi:index:inputPropertiesAdditionalProperties"
        },
        "type": {
          "type": "string",
          "const": "array"
        }
      },
      "required": [
        "items",
        "type"
      ]
    },
    "pulumi:index:typeDefinition": {
      "type": "object",
      "description": "Describes an object or enum type.",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "choice1Of2": {
          "$ref": "#/types/pulumi:index:objectTypeDefinition"
        },
        "choice2Of2": {
          "$ref": "#/types/pulumi:index:enumTypeDefinition"
        },
        "description": {
          "type": "string",
          "description": "The description of the type, if any. Interpreted as Markdown."
        },
        "isOverlay": {
          "type": "boolean",
          "description": "Indicates that the implementation of the type should not be generated from the schema, and is instead provided out-of-band by the package author"
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the type."
        }
      }
    },
    "pulumi:index:objectTypeDetails": {
      "type": "object",
      "description": "Describes an object type",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/types/pulumi:index:inputsPropertiesAdditionalProperties"
          },
          "description": "A map from property name to propertySpec that describes the object\u0027s properties."
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the names of an object type\u0027s required properties. These properties must be set for inputs and will always be set for outputs."
        }
      }
    },
    "pulumi:index:enumValueDefinition": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "deprecationMessage": {
          "type": "string",
          "description": "Indicates whether the value is deprecated."
        },
        "description": {
          "type": "string",
          "description": "The description of the enum value, if any. Interpreted as Markdown."
        },
        "name": {
          "type": "string",
          "description": "If present, overrides the name of the enum value that would usually be derived from the value."
        },
        "value": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "integer"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "required": [
        "value"
      ]
    },
    "pulumi:index:choice5Of5": {
      "type": "object",
      "description": "A reference to a union type. The \u0022oneOf\u0022 property must be present. The union may additional specify an underlying primitive type via the \u0022type\u0022 property and a discriminator via the \u0022discriminator\u0022 property. No other properties may be present.",
      "properties": {
        "discriminator": {
          "$ref": "#/types/pulumi:index:discriminator"
        },
        "oneOf": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumi:index:additionalProperties"
          },
          "description": "If present, indicates that values of the type may be one of any of the listed types"
        },
        "type": {
          "$ref": "#/types/pulumi:index:type"
        }
      },
      "required": [
        "oneOf"
      ]
    },
    "pulumi:index:additionalPropertiesChoice5Of5": {
      "type": "object",
      "description": "A reference to a union type. The \u0022oneOf\u0022 property must be present. The union may additional specify an underlying primitive type via the \u0022type\u0022 property and a discriminator via the \u0022discriminator\u0022 property. No other properties may be present.",
      "properties": {
        "discriminator": {
          "$ref": "#/types/pulumi:index:discriminator"
        },
        "oneOf": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumi:index:typeSpec"
          },
          "description": "If present, indicates that values of the type may be one of any of the listed types"
        },
        "type": {
          "$ref": "#/types/pulumi:index:typeSpecOneOf4PropertiesType"
        }
      },
      "required": [
        "oneOf"
      ]
    },
    "pulumi:index:choice1Of5Type": {
      "description": "The primitive type, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:objectTypeSpec": {
      "type": "object",
      "description": "Describes a resource or component.",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "aliases": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumi:index:aliasDefinition"
          },
          "description": "The list of aliases for the resource."
        },
        "deprecationMessage": {
          "type": "string",
          "description": "Indicates whether the resource is deprecated"
        },
        "description": {
          "type": "string",
          "description": "The description of the resource, if any. Interpreted as Markdown."
        },
        "inputProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/types/pulumi:index:providerInputPropertiesAdditionalProperties"
          },
          "description": "A map from property name to propertySpec that describes the resource\u0027s input properties."
        },
        "isComponent": {
          "type": "boolean",
          "description": "Indicates whether the resource is a component."
        },
        "isOverlay": {
          "type": "boolean",
          "description": "Indicates that the implementation of the resource should not be generated from the schema, and is instead provided out-of-band by the package author"
        },
        "methods": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map from method name to function token that describes the resource\u0027s method set."
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/types/pulumi:index:propertyDefinition"
          },
          "description": "A map from property name to propertySpec that describes the object\u0027s properties."
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the names of an object type\u0027s required properties. These properties must be set for inputs and will always be set for outputs."
        },
        "requiredInputs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the names of the resource\u0027s required input properties."
        },
        "stateInputs": {
          "$ref": "#/types/pulumi:index:objectTypeSpec"
        }
      }
    },
    "pulumi:index:additionalPropertiesChoice1Of5Type": {
      "description": "The primitive type, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:additionalPropertiesChoice2Of5": {
      "type": "object",
      "description": "A reference to an array type. The \u0022type\u0022 property must be set to \u0022array\u0022 and the \u0022items\u0022 property must be present. No other properties may be present.",
      "properties": {
        "items": {
          "$ref": "#/types/pulumi:index:providerInputPropertiesAdditionalProperties"
        },
        "type": {
          "type": "string",
          "const": "array"
        }
      },
      "required": [
        "items",
        "type"
      ]
    },
    "pulumi:index:propertiesAdditionalPropertiesChoice1Of5Type": {
      "description": "The primitive type, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:inputPropertiesAdditionalPropertiesChoice5Of5": {
      "type": "object",
      "description": "A reference to a union type. The \u0022oneOf\u0022 property must be present. The union may additional specify an underlying primitive type via the \u0022type\u0022 property and a discriminator via the \u0022discriminator\u0022 property. No other properties may be present.",
      "properties": {
        "discriminator": {
          "$ref": "#/types/pulumi:index:discriminator"
        },
        "oneOf": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumi:index:inputPropertiesAdditionalProperties"
          },
          "description": "If present, indicates that values of the type may be one of any of the listed types"
        },
        "type": {
          "$ref": "#/types/pulumi:index:choice5Of5Type"
        }
      },
      "required": [
        "oneOf"
      ]
    },
    "pulumi:index:additionalPropertiesChoice5Of5Type": {
      "description": "The underlying primitive type of the union, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:discriminator": {
      "type": "object",
      "description": "Informs the consumer of an alternative schema based on the value associated with it",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "mapping": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "An optional object to hold mappings between payload values and schema names or references"
        },
        "propertyName": {
          "type": "string",
          "description": "PropertyName is the name of the property in the payload that will hold the discriminator value"
        }
      },
      "required": [
        "propertyName"
      ]
    },
    "pulumi:index:propertiesAdditionalPropertiesChoice1Of5": {
      "type": "object",
      "description": "A reference to a primitive type. A primitive type must have only the \u0022type\u0022 property set.",
      "properties": {
        "type": {
          "$ref": "#/types/pulumi:index:propertiesAdditionalPropertiesChoice1Of5Type"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:propertiesAdditionalPropertiesChoice2Of5": {
      "type": "object",
      "description": "A reference to an array type. The \u0022type\u0022 property must be set to \u0022array\u0022 and the \u0022items\u0022 property must be present. No other properties may be present.",
      "properties": {
        "items": {
          "$ref": "#/types/pulumi:index:inputsPropertiesAdditionalProperties"
        },
        "type": {
          "type": "string",
          "const": "array"
        }
      },
      "required": [
        "items",
        "type"
      ]
    },
    "pulumi:index:inputPropertiesAdditionalProperties": {
      "type": "object",
      "description": "Describes an object or resource property",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "choice1Of5": {
          "$ref": "#/types/pulumi:index:inputPropertiesAdditionalPropertiesChoice1Of5"
        },
        "choice2Of5": {
          "$ref": "#/types/pulumi:index:choice2Of5"
        },
        "choice3Of5": {
          "$ref": "#/types/pulumi:index:typeSpecOneOf2"
        },
        "choice4Of5": {
          "$ref": "#/types/pulumi:index:namedType"
        },
        "choice5Of5": {
          "$ref": "#/types/pulumi:index:inputPropertiesAdditionalPropertiesChoice5Of5"
        },
        "const": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "default": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "defaultInfo": {
          "$ref": "#/types/pulumi:index:defaultInfo"
        },
        "deprecationMessage": {
          "type": "string",
          "description": "Indicates whether the property is deprecated"
        },
        "description": {
          "type": "string",
          "description": "The description of the property, if any. Interpreted as Markdown."
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the property."
        },
        "plain": {
          "type": "boolean",
          "description": "Indicates that when used as an input, this type does not accept eventual values."
        },
        "replaceOnChanges": {
          "type": "boolean",
          "description": "Specifies whether a change to the property causes its containing resource to be replaced instead of updated (default false)."
        },
        "secret": {
          "type": "boolean",
          "description": "Specifies whether the property is secret (default false)."
        },
        "willReplaceOnChanges": {
          "type": "boolean",
          "description": "Indicates that the provider will replace the resource when this property is changed."
        }
      }
    },
    "pulumi:index:additionalPropertiesChoice3Of5": {
      "type": "object",
      "description": "A reference to a map type. The \u0022type\u0022 property must be set to \u0022object\u0022 and the \u0022additionalProperties\u0022 property may be present. No other properties may be present.",
      "properties": {
        "additionalProperties": {
          "$ref": "#/types/pulumi:index:typeSpec"
        },
        "type": {
          "type": "string",
          "const": "object"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:propertiesAdditionalPropertiesChoice3Of5": {
      "type": "object",
      "description": "A reference to a map type. The \u0022type\u0022 property must be set to \u0022object\u0022 and the \u0022additionalProperties\u0022 property may be present. No other properties may be present.",
      "properties": {
        "additionalProperties": {
          "$ref": "#/types/pulumi:index:propertiesAdditionalProperties"
        },
        "type": {
          "type": "string",
          "const": "object"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:objectTypeDefinition": {
      "type": "object",
      "description": "Describes an object type",
      "properties": {
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/types/pulumi:index:propertiesAdditionalProperties"
          },
          "description": "A map from property name to propertySpec that describes the object\u0027s properties."
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the names of an object type\u0027s required properties. These properties must be set for inputs and will always be set for outputs."
        },
        "type": {
          "type": "string",
          "const": "object"
        }
      }
    },
    "pulumi:index:propertiesAdditionalPropertiesChoice5Of5Type": {
      "description": "The underlying primitive type of the union, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:defaultInfo": {
      "type": "object",
      "description": "Additional information about the property\u0027s default value, if any.",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "environment": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of environment variables to probe for a default value."
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the default value."
        }
      },
      "required": [
        "environment"
      ]
    },
    "pulumi:index:propertiesAdditionalProperties": {
      "type": "object",
      "description": "Describes an object or resource property",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "choice1Of5": {
          "$ref": "#/types/pulumi:index:propertiesAdditionalPropertiesChoice1Of5"
        },
        "choice2Of5": {
          "$ref": "#/types/pulumi:index:typeSpecOneOf1"
        },
        "choice3Of5": {
          "$ref": "#/types/pulumi:index:propertiesAdditionalPropertiesChoice3Of5"
        },
        "choice4Of5": {
          "$ref": "#/types/pulumi:index:namedType"
        },
        "choice5Of5": {
          "$ref": "#/types/pulumi:index:propertiesAdditionalPropertiesChoice5Of5"
        },
        "const": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "default": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "defaultInfo": {
          "$ref": "#/types/pulumi:index:defaultInfo"
        },
        "deprecationMessage": {
          "type": "string",
          "description": "Indicates whether the property is deprecated"
        },
        "description": {
          "type": "string",
          "description": "The description of the property, if any. Interpreted as Markdown."
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the property."
        },
        "plain": {
          "type": "boolean",
          "description": "Indicates that when used as an input, this type does not accept eventual values."
        },
        "replaceOnChanges": {
          "type": "boolean",
          "description": "Specifies whether a change to the property causes its containing resource to be replaced instead of updated (default false)."
        },
        "secret": {
          "type": "boolean",
          "description": "Specifies whether the property is secret (default false)."
        },
        "willReplaceOnChanges": {
          "type": "boolean",
          "description": "Indicates that the provider will replace the resource when this property is changed."
        }
      }
    },
    "pulumi:index:variablesAdditionalPropertiesChoice2Of5": {
      "type": "object",
      "description": "A reference to an array type. The \u0022type\u0022 property must be set to \u0022array\u0022 and the \u0022items\u0022 property must be present. No other properties may be present.",
      "properties": {
        "items": {
          "$ref": "#/types/pulumi:index:additionalProperties"
        },
        "type": {
          "type": "string",
          "const": "array"
        }
      },
      "required": [
        "items",
        "type"
      ]
    },
    "pulumi:index:inputsPropertiesAdditionalProperties": {
      "type": "object",
      "description": "Describes an object or resource property",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "choice1Of5": {
          "$ref": "#/types/pulumi:index:oneOf0"
        },
        "choice2Of5": {
          "$ref": "#/types/pulumi:index:propertiesAdditionalPropertiesChoice2Of5"
        },
        "choice3Of5": {
          "$ref": "#/types/pulumi:index:mapType"
        },
        "choice4Of5": {
          "$ref": "#/types/pulumi:index:namedType"
        },
        "choice5Of5": {
          "$ref": "#/types/pulumi:index:unionType"
        },
        "const": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "default": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "defaultInfo": {
          "$ref": "#/types/pulumi:index:defaultInfo"
        },
        "deprecationMessage": {
          "type": "string",
          "description": "Indicates whether the property is deprecated"
        },
        "description": {
          "type": "string",
          "description": "The description of the property, if any. Interpreted as Markdown."
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the property."
        },
        "plain": {
          "type": "boolean",
          "description": "Indicates that when used as an input, this type does not accept eventual values."
        },
        "replaceOnChanges": {
          "type": "boolean",
          "description": "Specifies whether a change to the property causes its containing resource to be replaced instead of updated (default false)."
        },
        "secret": {
          "type": "boolean",
          "description": "Specifies whether the property is secret (default false)."
        },
        "willReplaceOnChanges": {
          "type": "boolean",
          "description": "Indicates that the provider will replace the resource when this property is changed."
        }
      }
    },
    "pulumi:index:inputPropertiesAdditionalPropertiesChoice3Of5": {
      "type": "object",
      "description": "A reference to a map type. The \u0022type\u0022 property must be set to \u0022object\u0022 and the \u0022additionalProperties\u0022 property may be present. No other properties may be present.",
      "properties": {
        "additionalProperties": {
          "$ref": "#/types/pulumi:index:providerInputPropertiesAdditionalProperties"
        },
        "type": {
          "type": "string",
          "const": "object"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:parameterization": {
      "type": "object",
      "description": "An optional object to define parameterization for the package.",
      "properties": {
        "baseProvider": {
          "$ref": "#/types/pulumi:index:baseProvider"
        },
        "parameter": {
          "type": "string",
          "description": "The parameter for the provider."
        }
      }
    },
    "pulumi:index:functionDefinition": {
      "type": "object",
      "description": "Describes a function.",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "deprecationMessage": {
          "type": "string",
          "description": "Indicates whether the function is deprecated"
        },
        "description": {
          "type": "string",
          "description": "The description of the function, if any. Interpreted as Markdown."
        },
        "inputs": {
          "$ref": "#/types/pulumi:index:objectTypeDetails"
        },
        "isOverlay": {
          "type": "boolean",
          "description": "Indicates that the implementation of the function should not be generated from the schema, and is instead provided out-of-band by the package author"
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the function."
        },
        "multiArgumentInputs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of parameter names that determines whether the input bag should be treated as a single argument or as multiple arguments. The list corresponds to the order in which the parameters should be passed to the function."
        },
        "outputs": {
          "$ref": "pulumi.json#/Any",
          "description": "unhandled schema: Json.Schema.DescriptionKeyword, Json.Schema.AnyOfKeyword"
        }
      }
    },
    "pulumi:index:aliasDefinition": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "name": {
          "type": "string",
          "description": "The name portion of the alias, if any"
        },
        "project": {
          "type": "string",
          "description": "The project portion of the alias, if any"
        },
        "type": {
          "type": "string",
          "description": "The type portion of the alias, if any"
        }
      }
    },
    "pulumi:index:providerInputPropertiesAdditionalProperties": {
      "type": "object",
      "description": "Describes an object or resource property",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          }
        },
        "choice1Of5": {
          "$ref": "#/types/pulumi:index:primitiveType"
        },
        "choice2Of5": {
          "$ref": "#/types/pulumi:index:additionalPropertiesChoice2Of5"
        },
        "choice3Of5": {
          "$ref": "#/types/pulumi:index:inputPropertiesAdditionalPropertiesChoice3Of5"
        },
        "choice4Of5": {
          "$ref": "#/types/pulumi:index:namedType"
        },
        "choice5Of5": {
          "$ref": "#/types/pulumi:index:typeSpecOneOf4"
        },
        "const": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "default": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "defaultInfo": {
          "$ref": "#/types/pulumi:index:defaultInfo"
        },
        "deprecationMessage": {
          "type": "string",
          "description": "Indicates whether the property is deprecated"
        },
        "description": {
          "type": "string",
          "description": "The description of the property, if any. Interpreted as Markdown."
        },
        "language": {
          "type": "object",
          "additionalProperties": {
            "$ref": "pulumi.json#/Any"
          },
          "description": "Additional language-specific data about the property."
        },
        "plain": {
          "type": "boolean",
          "description": "Indicates that when used as an input, this type does not accept eventual values."
        },
        "replaceOnChanges": {
          "type": "boolean",
          "description": "Specifies whether a change to the property causes its containing resource to be replaced instead of updated (default false)."
        },
        "secret": {
          "type": "boolean",
          "description": "Specifies whether the property is secret (default false)."
        },
        "willReplaceOnChanges": {
          "type": "boolean",
          "description": "Indicates that the provider will replace the resource when this property is changed."
        }
      }
    },
    "pulumi:index:propertiesAdditionalPropertiesChoice5Of5": {
      "type": "object",
      "description": "A reference to a union type. The \u0022oneOf\u0022 property must be present. The union may additional specify an underlying primitive type via the \u0022type\u0022 property and a discriminator via the \u0022discriminator\u0022 property. No other properties may be present.",
      "properties": {
        "discriminator": {
          "$ref": "#/types/pulumi:index:discriminator"
        },
        "oneOf": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumi:index:propertiesAdditionalProperties"
          },
          "description": "If present, indicates that values of the type may be one of any of the listed types"
        },
        "type": {
          "$ref": "#/types/pulumi:index:propertiesAdditionalPropertiesChoice5Of5Type"
        }
      },
      "required": [
        "oneOf"
      ]
    },
    "pulumi:index:enumTypeSpecPropertiesType": {
      "description": "The underlying primitive type of the enum",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:inputsPropertiesAdditionalPropertiesChoice1Of5Type": {
      "description": "The primitive type, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    },
    "pulumi:index:inputPropertiesAdditionalPropertiesChoice1Of5": {
      "type": "object",
      "description": "A reference to a primitive type. A primitive type must have only the \u0022type\u0022 property set.",
      "properties": {
        "type": {
          "$ref": "#/types/pulumi:index:oneOf0PropertiesType"
        }
      },
      "required": [
        "type"
      ]
    },
    "pulumi:index:additionalPropertiesPropertiesAdditionalPropertiesChoice1Of5Type": {
      "description": "The primitive type, if any",
      "type": "string",
      "enum": [
        {
          "value": "boolean"
        },
        {
          "value": "integer"
        },
        {
          "value": "number"
        },
        {
          "value": "string"
        }
      ]
    }
  }
}