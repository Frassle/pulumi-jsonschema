// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Jsonschema.Outputs
{

    /// <summary>
    /// A description of the schema for a Pulumi Package
    /// </summary>
    [OutputType]
    public sealed class Root
    {
        public readonly string? Attribution;
        public readonly ImmutableDictionary<string, string>? Config;
        public readonly string? Description;
        public readonly string? DisplayName;
        public readonly ImmutableDictionary<string, ImmutableDictionary<string, string>>? Functions;
        public readonly string? Homepage;
        public readonly ImmutableArray<string> Keywords;
        public readonly ImmutableDictionary<string, object>? Language;
        public readonly string? License;
        public readonly string? LogoUrl;
        public readonly ImmutableDictionary<string, string>? Meta;
        public readonly string Name;
        public readonly string? PluginDownloadURL;
        public readonly object? Provider;
        public readonly string? Publisher;
        public readonly string? Repository;
        public readonly ImmutableDictionary<string, object>? Resources;
        public readonly ImmutableDictionary<string, object>? Types;
        public readonly string? Version;

        [OutputConstructor]
        private Root(
            string? attribution,

            ImmutableDictionary<string, string>? config,

            string? description,

            string? displayName,

            ImmutableDictionary<string, ImmutableDictionary<string, string>>? functions,

            string? homepage,

            ImmutableArray<string> keywords,

            ImmutableDictionary<string, object>? language,

            string? license,

            string? logoUrl,

            ImmutableDictionary<string, string>? meta,

            string name,

            string? pluginDownloadURL,

            object? provider,

            string? publisher,

            string? repository,

            ImmutableDictionary<string, object>? resources,

            ImmutableDictionary<string, object>? types,

            string? version)
        {
            Attribution = attribution;
            Config = config;
            Description = description;
            DisplayName = displayName;
            Functions = functions;
            Homepage = homepage;
            Keywords = keywords;
            Language = language;
            License = license;
            LogoUrl = logoUrl;
            Meta = meta;
            Name = name;
            PluginDownloadURL = pluginDownloadURL;
            Provider = provider;
            Publisher = publisher;
            Repository = repository;
            Resources = resources;
            Types = types;
            Version = version;
        }
    }
}
